{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_eas",
                    "type": "address",
                    "internalType": "contract IEAS"
                },
                {
                    "name": "_schemaRegistry",
                    "type": "address",
                    "internalType": "contract ISchemaRegistry"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "receive",
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "ATTESTATION_SCHEMA",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "attest",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "cancelStatement",
            "inputs": [
                {
                    "name": "uid",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "checkStatement",
            "inputs": [
                {
                    "name": "statement",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "demand",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "collectPayment",
            "inputs": [
                {
                    "name": "_payment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_fulfillment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getSchema",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct SchemaRecord",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "resolver",
                            "type": "address",
                            "internalType": "contract ISchemaResolver"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "schema",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStatement",
            "inputs": [
                {
                    "name": "uid",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isPayable",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "makeStatement",
            "inputs": [
                {
                    "name": "data",
                    "type": "tuple",
                    "internalType": "struct ERC721PaymentObligation.StatementData",
                    "components": [
                        {
                            "name": "token",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "tokenId",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "arbiter",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "demand",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "expirationTime",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "refUID",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "multiAttest",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "multiRevoke",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "revoke",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "error",
            "name": "AccessDenied",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AttestationRevoked",
            "inputs": []
        },
        {
            "type": "error",
            "name": "DeadlineExpired",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidEAS",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidFulfillment",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidLength",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPayment",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPaymentAttestation",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotFromStatement",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPayable",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnauthorizedCall",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "498:3771:51:-:0;;;864:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;942:4;948:15;549:301:48;;;;;;;;;;;;;;;;;1030:4:51;759:14:4;;;;688:1:6;783:14:4;;691:1:6;807:14:4;;696:4:48;-1:-1:-1;;;;;708:26:6;::::1;704:76;;757:12;;-1:-1:-1::0;;;757:12:6::1;;;;;;;;;;;704:76;-1:-1:-1::0;;;;;790:10:6;;::::1;;::::0;712::48;;::::1;;::::0;732:32;::::1;;::::0;;;795:48:::1;::::0;-1:-1:-1;;;795:48:48;;:23:::1;::::0;:48:::1;::::0;819:6;;827:4:::1;::::0;833:9;;795:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;774:69;::::0;-1:-1:-1;498:3771:51;;-1:-1:-1;;;;;498:3771:51;14:137:62;-1:-1:-1;;;;;95:31:62;;85:42;;75:70;;141:1;138;131:12;75:70;14:137;:::o;156:432::-;270:6;278;331:2;319:9;310:7;306:23;302:32;299:52;;;347:1;344;337:12;299:52;379:9;373:16;398:37;429:5;398:37;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:39:62;483:25;517:39;:::i;:::-;575:7;565:17;;;156:432;;;;;:::o;593:737::-;815:2;804:9;797:21;778:4;847:6;841:13;890:6;885:2;874:9;870:18;863:34;915:1;925:145;939:6;936:1;933:13;925:145;;;1053:4;1037:14;;;1033:25;;1027:32;1021:3;1002:17;;;998:27;991:69;954:12;925:145;;;-1:-1:-1;1120:1:62;1114:3;1090:22;;;1086:32;;1079:43;;;;-1:-1:-1;;;;;1232:32:62;;;;1225:4;1210:20;;1203:62;1308:14;;1301:22;1296:2;1281:18;;1274:50;-1:-1:-1;1183:2:62;1162:15;;;-1:-1:-1;;1158:29:62;1143:45;1139:55;;;-1:-1:-1;593:737:62:o;1335:184::-;1405:6;1458:2;1446:9;1437:7;1433:23;1429:32;1426:52;;;1474:1;1471;1464:12;1426:52;-1:-1:-1;1497:16:62;;1335:184;-1:-1:-1;1335:184:62:o;:::-;498:3771:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "498:3771:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1183:12:6;;-1:-1:-1;;;1183:12:6;;;;;;;;;;;498:3771:51;;;;2568:540;;;;;;;;;;-1:-1:-1;2568:540:51;;;;;:::i;:::-;;:::i;:::-;;;506:14:62;;499:22;481:41;;469:2;454:18;2568:540:51;;;;;;;;3115:638;;;;;;;;;;-1:-1:-1;3115:638:51;;;;;:::i;:::-;;:::i;1718:844::-;;;;;;;;;;-1:-1:-1;1718:844:51;;;;;:::i;:::-;;:::i;1048:664::-;;;;;;;;;;-1:-1:-1;1048:664:51;;;;;:::i;:::-;;:::i;:::-;;;5762:25:62;;;5750:2;5735:18;1048:664:51;5616:177:62;945:235:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;468:43:48:-;;;;;;;;;;;;;;;1257:274;;;;;;;;;;-1:-1:-1;1257:274:48;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1537:133::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3133:1460:6:-;;;;;;:::i;:::-;;:::i;1442:1461::-;;;;;;:::i;:::-;;:::i;981:85::-;;;;;;;;;;-1:-1:-1;1031:4:6;981:85;;2945:146;;;;;;:::i;:::-;;:::i;1254:::-;;;;;;:::i;:::-;;:::i;2568:540:51:-;2671:23;;-1:-1:-1;;;2671:23:51;;;;;5762:25:62;;;2622:4:51;;;;-1:-1:-1;;;;;2671:3:51;:18;;;;5735::62;;2671:23:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2671:23:51;;;;;;;;;;;;:::i;:::-;2638:56;;2722:11;:21;;;-1:-1:-1;;;;;2708:35:51;:10;-1:-1:-1;;;;;2708:35:51;;2704:66;;2752:18;;-1:-1:-1;;;2752:18:51;;;;;;;;;;;2704:66;2805:98;;;;;;;;2832:18;2805:98;;2858:43;;;;;;;;;;-1:-1:-1;2805:98:51;2858:43;;;;;;;2805:98;;;;;;2781:132;;-1:-1:-1;;;2781:132:51;;12902:13:62;;2781:132:51;;;12884:32:62;12945:24;13007:19;;12985:20;;;12978:49;13069:23;;;13063:30;13043:18;;;13036:58;2781:3:51;-1:-1:-1;;;;;2781:10:51;;;;12857:18:62;;2781:132:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2924:25;2963:11;:16;;;2952:45;;;;;;;;;;;;:::i;:::-;3015:10;;3067:12;;;;3007:73;;-1:-1:-1;;;3007:73:51;;3048:4;3007:73;;;14229:51:62;3055:10:51;14296:18:62;;;14289:60;14365:18;;;14358:34;;;;3015:10:51;;-1:-1:-1;;;;;;3007:32:51;;;;14202:18:62;;3007:73:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3097:4:51;;2568:540;-1:-1:-1;;;;;;;2568:540:51:o;3115:638::-;3278:4;3299:27;:9;:25;:27::i;:::-;3294:46;;-1:-1:-1;3335:5:51;3328:12;;3294:46;3351:28;3393:9;:14;;;3382:43;;;;;;;;;;;;:::i;:::-;3351:74;;3435:31;3480:6;3469:35;;;;;;;;;;;;:::i;:::-;3551:16;;3534:13;;3435:69;;-1:-1:-1;;;;;;3534:33:51;;;;;;:86;;;;;3602:10;:18;;;3583:7;:15;;;:37;3534:86;:139;;;;;3655:10;:18;;;-1:-1:-1;;;;;3636:37:51;:7;:15;;;-1:-1:-1;;;;;3636:37:51;;3534:139;:212;;;;;3728:10;:17;;;3718:28;;;;;;3699:7;:14;;;3689:25;;;;;;:57;3534:212;3515:231;;;;3115:638;;;;;;:::o;1718:844::-;1843:28;;-1:-1:-1;;;1843:28:51;;;;;5762:25:62;;;1798:4:51;;;;-1:-1:-1;;;;;1843:3:51;:18;;;;5735::62;;1843:28:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1843:28:51;;;;;;;;;;;;:::i;:::-;1914:32;;-1:-1:-1;;;1914:32:51;;;;;5762:25:62;;;1814:57:51;;-1:-1:-1;1881:30:51;;-1:-1:-1;;;;;1914:3:51;:18;;;;5735::62;;1914:32:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1914:32:51;;;;;;;;;;;;:::i;:::-;1881:65;;1962:25;:7;:23;:25::i;:::-;1957:66;;1996:27;;-1:-1:-1;;;1996:27:51;;;;;;;;;;;1957:66;2034:32;2080:7;:12;;;2069:41;;;;;;;;;;;;:::i;:::-;2034:76;;2171:54;2191:7;2200:11;2213;2171:19;:54::i;:::-;2166:113;;2248:20;;-1:-1:-1;;;2248:20:51;;;;;;;;;;;2166:113;2313:103;;;;;;;;2340:18;2313:103;;2366:48;;;;;;;;;;-1:-1:-1;2313:103:51;2366:48;;;;;;;2313:103;;;;;;2289:137;;-1:-1:-1;;;2289:137:51;;12902:13:62;;2289:137:51;;;12884:32:62;12945:24;13007:19;;12985:20;;;12978:49;13069:23;;;13063:30;13043:18;;;13036:58;2289:3:51;-1:-1:-1;;;;;2289:10:51;;;;12857:18:62;;2289:137:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2444:17:51;;2491:21;;;;2514:19;;;;2436:98;;-1:-1:-1;;;2436:98:51;;2484:4;2436:98;;;14229:51:62;-1:-1:-1;;;;;14316:32:62;;;14296:18;;;14289:60;14365:18;;;14358:34;;;;2436:39:51;;;-1:-1:-1;2436:39:51;;-1:-1:-1;14202:18:62;;2436:98:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2551:4:51;;1718:844;-1:-1:-1;;;;;;;;;1718:844:51:o;1048:664::-;1171:7;1202:10;;;;:4;:10;:::i;:::-;1194:73;;-1:-1:-1;;;1194:73:51;;1227:10;1194:73;;;14229:51:62;1247:4:51;14296:18:62;;;14289:60;1254:12:51;;;;14365:18:62;;;14358:34;-1:-1:-1;;;;;1194:32:51;;;;;;;14202:18:62;;1194:73:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:3;-1:-1:-1;;;;;1285:10:51;;1309:386;;;;;;;;1354:18;1309:386;;;;1396:284;;;;;;;;1452:10;-1:-1:-1;;;;;1396:284:51;;;;;1500:14;-1:-1:-1;;;;;1396:284:51;;;;;1547:4;1396:284;;;;;;1581:6;1396:284;;;;1626:4;1615:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;1396:284;;;;1660:1;1396:284;;;1309:386;;;1285:420;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1278:427;1048:664;-1:-1:-1;;;;1048:664:51:o;945:235:4:-;987:13;1072:24;1089:6;1072:16;:24::i;:::-;1103;1120:6;1103:16;:24::i;:::-;1134;1151:6;1134:16;:24::i;:::-;1055:104;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1012:161;;945:235;:::o;1257:274:48:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:23:48;;-1:-1:-1;;;1392:23:48;;;;;5762:25:62;;;-1:-1:-1;;;;;;;;1392:3:48;:18;;;;5735::62;;1392:23:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1392:23:48;;;;;;;;;;;;:::i;:::-;1359:56;;1451:18;1429:11;:18;;;:40;1425:71;;1478:18;;-1:-1:-1;;;1478:18:48;;;;;;;;;;;1425:71;1513:11;1257:274;-1:-1:-1;;1257:274:48:o;1537:133::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:44:48;;-1:-1:-1;;;1619:44:48;;1644:18;1619:44;;;5762:25:62;-1:-1:-1;;;;;1619:14:48;:24;;;;5735:18:62;;1619:44:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1619:44:48;;;;;;;;;;;;:::i;:::-;1612:51;;1537:133;:::o;3133:1460:6:-;3274:4;910:10;:8;:10::i;:::-;3307:12;3340:23;;::::1;3336:76;;3386:15;;-1:-1:-1::0;;;3386:15:6::1;;;;;;;;;;;3336:76;3844:9;3819:22;3864:701;3888:6;3884:1;:10;3864:701;;;4021:13;4037:6;;4044:1;4037:9;;;;;;;:::i;:::-;;;;;;;4021:25;;4072:14;4064:5;:22;4060:87;;;4113:19;;-1:-1:-1::0;;;4113:19:6::1;;;;;;;;;;;4060:87;4275:32;4284:12;;4297:1;4284:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1240:4:48;;1102:149;4275:32:6::1;4270:84;;4334:5;4327:12;;;;;;;;4270:84;4517:23:::0;;::::1;::::0;1489:1:0;1485:5;3864:701:6::1;;1442:1461:::0;1583:4;910:10;:8;:10::i;:::-;1616:12;1649:23;;::::1;1645:76;;1695:15;;-1:-1:-1::0;;;1695:15:6::1;;;;;;;;;;;1645:76;2153:9;2128:22;2173:702;2197:6;2193:1;:10;2173:702;;;2330:13;2346:6;;2353:1;2346:9;;;;;;;:::i;:::-;;;;;;;2330:25;;2381:14;2373:5;:22;2369:87;;;2422:19;;-1:-1:-1::0;;;2422:19:6::1;;;;;;;;;;;2369:87;2585:32;2594:12;;2607:1;2594:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2611:5;2585:8;:32::i;:::-;2580:84;;2644:5;2637:12;;;;;;;;2580:84;2827:23:::0;;::::1;::::0;1489:1:0;1485:5;2173:702:6::1;;2945:146:::0;3029:4;910:10;:8;:10::i;:::-;1240:4:48;3052:32:6::1;3045:39;;931:1;2945:146:::0;;;:::o;1254:::-;1338:4;910:10;:8;:10::i;:::-;1361:32:::1;1370:11;1383:9;1361:8;:32::i;606:258:47:-:0;698:4;718:24;732:9;718:13;:24::i;:::-;714:54;;;751:17;;-1:-1:-1;;;751:17:47;;;;;;;;;;;714:54;564:24;;;;-1:-1:-1;;;;;564:29:47;;778:57;;815:20;;-1:-1:-1;;;815:20:47;;;;;;;;;;;778:57;-1:-1:-1;853:4:47;;606:258;-1:-1:-1;606:258:47:o;3759:508:51:-;4042:14;;;;3935:4;;4042:19;4038:65;;-1:-1:-1;4088:15:51;;4070:14;;;;:33;4063:40;;4038:65;4179:19;;;;;4228:18;;;;4248:11;;4170:90;;-1:-1:-1;;;4170:90:51;;-1:-1:-1;;;;;4170:44:51;;;;;;:90;;4215:11;;4228:18;;4170:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;637:632:41:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;-1:-1:-1;;;;;817:18:41;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:41;-1:-1:-1;794:41:41;-1:-1:-1;924:28:41;;;940:2;924:28;979:247;-1:-1:-1;;1010:5:41;-1:-1:-1;;;1109:2:41;1098:14;;1093:32;1010:5;1080:46;1170:2;1161:11;;;-1:-1:-1;1190:21:41;979:247;1190:21;-1:-1:-1;1246:6:41;637:632;-1:-1:-1;;;637:632:41:o;6040:128:6:-;6087:10;-1:-1:-1;;;;;6109:4:6;6087:27;;6083:79;;6137:14;;-1:-1:-1;;;6137:14:6;;;;;;;;;;;6083:79;6040:128::o;856:240:48:-;983:4;1084;1052:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1052:37:48;;;856:240;-1:-1:-1;;;856:240:48:o;226:219:47:-;316:4;351:9;:24;;;-1:-1:-1;;;;;351:29:47;379:1;351:29;;:87;;;;-1:-1:-1;;396:24:47;;;423:15;-1:-1:-1;;;;;396:42:47;;;;;226:219::o;25316:916:44:-;25369:7;;-1:-1:-1;;;25444:17:44;;25440:103;;-1:-1:-1;;;25481:17:44;;;-1:-1:-1;25526:2:44;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:44;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:44;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:44;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:44;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:44;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:44:o;14:226:62:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:62;;14:226;-1:-1:-1;14:226:62:o;533:127::-;594:10;589:3;585:20;582:1;575:31;625:4;622:1;615:15;649:4;646:1;639:15;665:255;737:2;731:9;779:6;767:19;;-1:-1:-1;;;;;801:34:62;;837:22;;;798:62;795:88;;;863:18;;:::i;:::-;899:2;892:22;665:255;:::o;925:253::-;997:2;991:9;1039:4;1027:17;;-1:-1:-1;;;;;1059:34:62;;1095:22;;;1056:62;1053:88;;;1121:18;;:::i;1183:275::-;1254:2;1248:9;1319:2;1300:13;;-1:-1:-1;;1296:27:62;1284:40;;-1:-1:-1;;;;;1339:34:62;;1375:22;;;1336:62;1333:88;;;1401:18;;:::i;:::-;1437:2;1430:22;1183:275;;-1:-1:-1;1183:275:62:o;1463:129::-;-1:-1:-1;;;;;1541:5:62;1537:30;1530:5;1527:41;1517:69;;1582:1;1579;1572:12;1517:69;1463:129;:::o;1597:132::-;1664:20;;1693:30;1664:20;1693:30;:::i;1734:131::-;-1:-1:-1;;;;;1809:31:62;;1799:42;;1789:70;;1855:1;1852;1845:12;1870:134;1938:20;;1967:31;1938:20;1967:31;:::i;2009:118::-;2095:5;2088:13;2081:21;2074:5;2071:32;2061:60;;2117:1;2114;2107:12;2132:128;2197:20;;2226:28;2197:20;2226:28;:::i;2265:186::-;2313:4;-1:-1:-1;;;;;2338:6:62;2335:30;2332:56;;;2368:18;;:::i;:::-;-1:-1:-1;2434:2:62;2413:15;-1:-1:-1;;2409:29:62;2440:4;2405:40;;2265:186::o;2456:486::-;2498:5;2551:3;2544:4;2536:6;2532:17;2528:27;2518:55;;2569:1;2566;2559:12;2518:55;2609:6;2596:20;2640:52;2656:35;2684:6;2656:35;:::i;:::-;2640:52;:::i;:::-;2717:6;2708:7;2701:23;2771:3;2764:4;2755:6;2747;2743:19;2739:30;2736:39;2733:59;;;2788:1;2785;2778:12;2733:59;2853:6;2846:4;2838:6;2834:17;2827:4;2818:7;2814:18;2801:59;2909:1;2880:20;;;2902:4;2876:31;2869:42;;;;2884:7;2456:486;-1:-1:-1;;;2456:486:62:o;2947:1661::-;3060:6;3068;3076;3129:2;3117:9;3108:7;3104:23;3100:32;3097:52;;;3145:1;3142;3135:12;3097:52;3185:9;3172:23;-1:-1:-1;;;;;3210:6:62;3207:30;3204:50;;;3250:1;3247;3240:12;3204:50;3273:22;;3329:6;3311:16;;;3307:29;3304:49;;;3349:1;3346;3339:12;3304:49;3375:22;;:::i;:::-;3442:16;;3467:22;;3555:2;3547:11;;;3534:25;3575:14;;;3568:31;3631:30;3657:2;3649:11;;3631:30;:::i;:::-;3626:2;3619:5;3615:14;3608:54;3694:30;3720:2;3716;3712:11;3694:30;:::i;:::-;3689:2;3682:5;3678:14;3671:54;3758:31;3784:3;3780:2;3776:12;3758:31;:::i;:::-;3752:3;3741:15;;3734:56;3856:3;3848:12;;;3835:26;3877:15;;;3870:32;3935;3962:3;3954:12;;3935:32;:::i;:::-;3929:3;3922:5;3918:15;3911:57;4001:32;4028:3;4024:2;4020:12;4001:32;:::i;:::-;3995:3;3988:5;3984:15;3977:57;4067:29;4091:3;4087:2;4083:12;4067:29;:::i;:::-;4061:3;4054:5;4050:15;4043:54;4143:3;4139:2;4135:12;4122:26;-1:-1:-1;;;;;4163:8:62;4160:32;4157:52;;;4205:1;4202;4195:12;4157:52;4242:44;4278:7;4267:8;4263:2;4259:17;4242:44;:::i;:::-;4236:3;4225:15;;4218:69;-1:-1:-1;4229:5:62;-1:-1:-1;;4364:2:62;4349:18;;4336:32;-1:-1:-1;;;;;4380:32:62;;4377:52;;;4425:1;4422;4415:12;4377:52;4448:51;4491:7;4480:8;4469:9;4465:24;4448:51;:::i;:::-;2947:1661;;4438:61;;-1:-1:-1;;;;4572:2:62;4557:18;;;;4544:32;;2947:1661::o;4613:346::-;4681:6;4689;4742:2;4730:9;4721:7;4717:23;4713:32;4710:52;;;4758:1;4755;4748:12;4710:52;-1:-1:-1;;4803:23:62;;;4923:2;4908:18;;;4895:32;;-1:-1:-1;4613:346:62:o;4964:647::-;5074:6;5082;5090;5143:2;5131:9;5122:7;5118:23;5114:32;5111:52;;;5159:1;5156;5149:12;5111:52;5199:9;5186:23;-1:-1:-1;;;;;5224:6:62;5221:30;5218:50;;;5264:1;5261;5254:12;5218:50;5287:22;;5343:3;5325:16;;;5321:26;5318:46;;;5360:1;5357;5350:12;5318:46;5383:2;-1:-1:-1;5435:2:62;5420:18;;5407:32;5448:30;5407:32;5448:30;:::i;:::-;4964:647;;5497:5;;-1:-1:-1;;;5575:2:62;5560:18;;;;5547:32;;4964:647::o;5798:250::-;5883:1;5893:113;5907:6;5904:1;5901:13;5893:113;;;5983:11;;;5977:18;5964:11;;;5957:39;5929:2;5922:10;5893:113;;;-1:-1:-1;;6040:1:62;6022:16;;6015:27;5798:250::o;6053:271::-;6095:3;6133:5;6127:12;6160:6;6155:3;6148:19;6176:76;6245:6;6238:4;6233:3;6229:14;6222:4;6215:5;6211:16;6176:76;:::i;:::-;6306:2;6285:15;-1:-1:-1;;6281:29:62;6272:39;;;;6313:4;6268:50;;6053:271;-1:-1:-1;;6053:271:62:o;6329:220::-;6478:2;6467:9;6460:21;6441:4;6498:45;6539:2;6528:9;6524:18;6516:6;6498:45;:::i;6770:1051::-;6860:5;6854:12;6849:3;6842:25;6916:4;6909:5;6905:16;6899:23;6892:4;6887:3;6883:14;6876:47;6824:3;6969:4;6962:5;6958:16;6952:23;6984:47;7025:4;7020:3;7016:14;7002:12;-1:-1:-1;;;;;6619:30:62;6607:43;;6554:102;6984:47;;7079:4;7072:5;7068:16;7062:23;7094:49;7137:4;7132:3;7128:14;7112;-1:-1:-1;;;;;6619:30:62;6607:43;;6554:102;7094:49;;7191:4;7184:5;7180:16;7174:23;7206:49;7249:4;7244:3;7240:14;7224;-1:-1:-1;;;;;6619:30:62;6607:43;;6554:102;7206:49;;7304:4;7297:5;7293:16;7287:23;7280:4;7275:3;7271:14;7264:47;7359:4;7352:5;7348:16;7342:23;7374:50;7418:4;7413:3;7409:14;7393;-1:-1:-1;;;;;6727:31:62;6715:44;;6661:104;7374:50;;7472:4;7465:5;7461:16;7455:23;7487:50;7531:4;7526:3;7522:14;7506;-1:-1:-1;;;;;6727:31:62;6715:44;;6661:104;7487:50;;7585:6;7578:5;7574:18;7568:25;7602:49;7643:6;7638:3;7634:16;7618:14;315:13;308:21;296:34;;245:91;7602:49;;7699:6;7692:5;7688:18;7682:25;7741:6;7732;7727:3;7723:16;7716:32;7764:51;7807:6;7802:3;7798:16;7782:14;7764:51;:::i;7826:266::-;8009:2;7998:9;7991:21;7972:4;8029:57;8082:2;8071:9;8067:18;8059:6;8029:57;:::i;8097:569::-;8284:2;8273:9;8266:21;8329:6;8323:13;8318:2;8307:9;8303:18;8296:41;8418:1;8414;8409:3;8405:11;8401:19;8395:2;8387:6;8383:15;8377:22;8373:48;8368:2;8357:9;8353:18;8346:76;8490:2;8482:6;8478:15;8472:22;8465:30;8458:38;8453:2;8442:9;8438:18;8431:66;8247:4;8544:2;8536:6;8532:15;8526:22;8586:4;8579;8568:9;8564:20;8557:34;8608:52;8655:3;8644:9;8640:19;8626:12;8608:52;:::i;8671:387::-;8754:8;8764:6;8818:3;8811:4;8803:6;8799:17;8795:27;8785:55;;8836:1;8833;8826:12;8785:55;-1:-1:-1;8859:20:62;;-1:-1:-1;;;;;8891:30:62;;8888:50;;;8934:1;8931;8924:12;8888:50;8971:4;8963:6;8959:17;8947:29;;9031:3;9024:4;9014:6;9011:1;9007:14;8999:6;8995:27;8991:38;8988:47;8985:67;;;9048:1;9045;9038:12;8985:67;8671:387;;;;;:::o;9063:837::-;9214:6;9222;9230;9238;9291:2;9279:9;9270:7;9266:23;9262:32;9259:52;;;9307:1;9304;9297:12;9259:52;9347:9;9334:23;-1:-1:-1;;;;;9372:6:62;9369:30;9366:50;;;9412:1;9409;9402:12;9366:50;9451:90;9533:7;9524:6;9513:9;9509:22;9451:90;:::i;:::-;9560:8;;-1:-1:-1;9425:116:62;-1:-1:-1;;9648:2:62;9633:18;;9620:32;-1:-1:-1;;;;;9664:32:62;;9661:52;;;9709:1;9706;9699:12;9661:52;9748:92;9832:7;9821:8;9810:9;9806:24;9748:92;:::i;:::-;9063:837;;;;-1:-1:-1;9859:8:62;-1:-1:-1;;;;9063:837:62:o;9905:389::-;9993:6;10046:2;10034:9;10025:7;10021:23;10017:32;10014:52;;;10062:1;10059;10052:12;10014:52;10102:9;10089:23;-1:-1:-1;;;;;10127:6:62;10124:30;10121:50;;;10167:1;10164;10157:12;10121:50;10190:22;;10246:3;10228:16;;;10224:26;10221:46;;;10263:1;10260;10253:12;10299:136;10377:13;;10399:30;10377:13;10399:30;:::i;10440:138::-;10519:13;;10541:31;10519:13;10541:31;:::i;10583:132::-;10659:13;;10681:28;10659:13;10681:28;:::i;10720:320::-;10795:5;10824:52;10840:35;10868:6;10840:35;:::i;10824:52::-;10815:61;;10899:6;10892:5;10885:21;10939:3;10930:6;10925:3;10921:16;10918:25;10915:45;;;10956:1;10953;10946:12;10915:45;10969:65;11027:6;11020:4;11013:5;11009:16;11004:3;10969:65;:::i;11045:235::-;11098:5;11151:3;11144:4;11136:6;11132:17;11128:27;11118:55;;11169:1;11166;11159:12;11118:55;11191:83;11270:3;11261:6;11255:13;11248:4;11240:6;11236:17;11191:83;:::i;11285:1380::-;11382:6;11435:2;11423:9;11414:7;11410:23;11406:32;11403:52;;;11451:1;11448;11441:12;11403:52;11484:9;11478:16;-1:-1:-1;;;;;11509:6:62;11506:30;11503:50;;;11549:1;11546;11539:12;11503:50;11572:22;;11628:6;11610:16;;;11606:29;11603:49;;;11648:1;11645;11638:12;11603:49;11674:22;;:::i;:::-;11741:9;;11759:22;;11840:2;11832:11;;;11826:18;11860:14;;;11853:31;11916:41;11953:2;11945:11;;11916:41;:::i;:::-;11911:2;11904:5;11900:14;11893:65;11990:41;12027:2;12023;12019:11;11990:41;:::i;:::-;11985:2;11978:5;11974:14;11967:65;12065:42;12102:3;12098:2;12094:12;12065:42;:::i;:::-;12059:3;12048:15;;12041:67;12167:3;12159:12;;;12153:19;12188:15;;;12181:32;12246:43;12284:3;12276:12;;12246:43;:::i;:::-;12240:3;12233:5;12229:15;12222:68;12323:43;12361:3;12357:2;12353:12;12323:43;:::i;:::-;12317:3;12310:5;12306:15;12299:68;12400:40;12435:3;12431:2;12427:12;12400:40;:::i;:::-;12394:3;12387:5;12383:15;12376:65;12480:3;12476:2;12472:12;12466:19;-1:-1:-1;;;;;12500:8:62;12497:32;12494:52;;;12542:1;12539;12532:12;12494:52;12579:55;12626:7;12615:8;12611:2;12607:17;12579:55;:::i;:::-;12573:3;12562:15;;12555:80;-1:-1:-1;12566:5:62;11285:1380;-1:-1:-1;;;;11285:1380:62:o;13105:917::-;13207:6;13260:2;13248:9;13239:7;13235:23;13231:32;13228:52;;;13276:1;13273;13266:12;13228:52;13309:9;13303:16;-1:-1:-1;;;;;13334:6:62;13331:30;13328:50;;;13374:1;13371;13364:12;13328:50;13397:22;;13453:4;13435:16;;;13431:27;13428:47;;;13471:1;13468;13461:12;13428:47;13497:22;;:::i;:::-;13549:2;13543:9;13561:33;13586:7;13561:33;:::i;:::-;13603:22;;13671:2;13663:11;;;13657:18;13641:14;;;13634:42;13714:2;13706:11;;13700:18;13727:33;13700:18;13727:33;:::i;:::-;13787:2;13776:14;;13769:31;13839:2;13831:11;;13825:18;-1:-1:-1;;;;;13855:32:62;;13852:52;;;13900:1;13897;13890:12;13852:52;13936:55;13983:7;13972:8;13968:2;13964:17;13936:55;:::i;:::-;13931:2;13920:14;;13913:79;-1:-1:-1;13924:5:62;13105:917;-1:-1:-1;;;;13105:917:62:o;14403:247::-;14462:6;14515:2;14503:9;14494:7;14490:23;14486:32;14483:52;;;14531:1;14528;14521:12;14483:52;14570:9;14557:23;14589:31;14614:5;14589:31;:::i;14655:266::-;14743:6;14738:3;14731:19;14795:6;14788:5;14781:4;14776:3;14772:14;14759:43;-1:-1:-1;14847:1:62;14822:16;;;14840:4;14818:27;;;14811:38;;;;14903:2;14882:15;;;-1:-1:-1;;14878:29:62;14869:39;;;14865:50;;14655:266::o;14926:1143::-;15121:2;15110:9;15103:21;15084:4;15159:6;15146:20;15175:31;15200:5;15175:31;:::i;:::-;15270:1;15266;15261:3;15257:11;15253:19;15246:5;15242:31;15237:2;15226:9;15222:18;15215:59;;15335:2;15327:6;15323:15;15310:29;15305:2;15294:9;15290:18;15283:57;15389:2;15381:6;15377:15;15364:29;15402:33;15427:7;15402:33;:::i;:::-;-1:-1:-1;;;;;15471:33:62;15466:2;15451:18;;;15444:61;;;;15553:15;;15540:29;15620:14;15616:27;;;-1:-1:-1;;15612:41:62;15588:66;;15578:94;;15668:1;15665;15658:12;15578:94;15696:31;;15808:2;15795:16;;;15750:21;-1:-1:-1;;;;;15823:30:62;;15820:50;;;15866:1;15863;15856:12;15820:50;15915:6;15899:14;15895:27;15886:7;15882:41;15879:61;;;15936:1;15933;15926:12;15879:61;15978:4;15971;15960:9;15956:20;15949:34;16000:63;16058:3;16047:9;16043:19;16035:6;16026:7;16000:63;:::i;:::-;15992:71;14926:1143;-1:-1:-1;;;;;14926:1143:62:o;16074:943::-;16271:2;16260:9;16253:21;16316:6;16310:13;16305:2;16294:9;16290:18;16283:41;16234:4;16371:2;16363:6;16359:15;16353:22;16413:4;16406;16395:9;16391:20;16384:34;16496:1;16492;16487:3;16483:11;16479:19;16464:12;16458:19;16454:45;16449:2;16438:9;16434:18;16427:73;-1:-1:-1;;;;;16565:2:62;16551:12;16547:21;16541:28;16537:53;16531:3;16520:9;16516:19;16509:82;16666:4;16652:12;16648:23;16642:30;16635:38;16628:46;16622:3;16611:9;16607:19;16600:75;16737:2;16723:12;16719:21;16713:28;16706:4;16695:9;16691:20;16684:58;16797:3;16783:12;16779:22;16773:29;16839:4;16833:3;16822:9;16818:19;16811:33;16867:54;16916:3;16905:9;16901:19;16885:14;16867:54;:::i;:::-;16853:68;;16982:3;16968:12;16964:22;16958:29;16952:3;16941:9;16937:19;16930:58;17005:6;16997:14;;;;16074:943;;;;:::o;17022:230::-;17092:6;17145:2;17133:9;17124:7;17120:23;17116:32;17113:52;;;17161:1;17158;17151:12;17113:52;-1:-1:-1;17206:16:62;;17022:230;-1:-1:-1;17022:230:62:o;17257:987::-;17686:3;17724:6;17718:13;17740:66;17799:6;17794:3;17787:4;17779:6;17775:17;17740:66;:::i;:::-;-1:-1:-1;;;17828:16:62;;;17853:18;;;17896:13;;17918:78;17896:13;17983:1;17972:13;;17965:4;17953:17;;17918:78;:::i;:::-;-1:-1:-1;;;18059:1:62;18015:20;;;;18051:10;;;18044:23;18092:13;;18114:75;18092:13;18176:1;18168:10;;18161:4;18149:17;;18114:75;:::i;:::-;18213:17;18205:33;;;;-1:-1:-1;;;;;17257:987:62:o;18249:1085::-;18348:6;18401:2;18389:9;18380:7;18376:23;18372:32;18369:52;;;18417:1;18414;18407:12;18369:52;18450:9;18444:16;-1:-1:-1;;;;;18475:6:62;18472:30;18469:50;;;18515:1;18512;18505:12;18469:50;18538:22;;18594:4;18576:16;;;18572:27;18569:47;;;18612:1;18609;18602:12;18569:47;18638:22;;:::i;:::-;18705:9;;18723:22;;18783:2;18775:11;;18769:18;18796:33;18769:18;18796:33;:::i;:::-;18856:2;18845:14;;18838:31;18907:2;18899:11;;18893:18;18920:30;18893:18;18920:30;:::i;:::-;18977:2;18966:14;;18959:31;19029:2;19021:11;;19015:18;-1:-1:-1;;;;;19045:32:62;;19042:52;;;19090:1;19087;19080:12;19042:52;19121:8;19117:2;19113:17;19103:27;;;19168:7;19161:4;19157:2;19153:13;19149:27;19139:55;;19190:1;19187;19180:12;19139:55;19226:77;19295:7;19290:2;19284:9;19279:2;19275;19271:11;19226:77;:::i;:::-;19221:2;19210:14;;19203:101;19214:5;18249:1085;-1:-1:-1;;;;18249:1085:62:o;19339:127::-;19400:10;19395:3;19391:20;19388:1;19381:31;19431:4;19428:1;19421:15;19455:4;19452:1;19445:15;19471:327;19566:4;19624:11;19611:25;19718:3;19714:8;19703;19687:14;19683:29;19679:44;19659:18;19655:69;19645:97;;19738:1;19735;19728:12;19645:97;19759:33;;;;;19471:327;-1:-1:-1;;19471:327:62:o;19803:498::-;20060:2;20049:9;20042:21;20023:4;20086:57;20139:2;20128:9;20124:18;20116:6;20086:57;:::i;:::-;20191:9;20183:6;20179:22;20174:2;20163:9;20159:18;20152:50;20219:33;20245:6;20237;20219:33;:::i;:::-;20211:41;;;20288:6;20283:2;20272:9;20268:18;20261:34;19803:498;;;;;;:::o;20306:245::-;20373:6;20426:2;20414:9;20405:7;20401:23;20397:32;20394:52;;;20442:1;20439;20432:12;20394:52;20474:9;20468:16;20493:28;20515:5;20493:28;:::i",
        "linkReferences": {},
        "immutableReferences": {
            "446": [
                {
                    "start": 2582,
                    "length": 32
                }
            ],
            "448": [
                {
                    "start": 2623,
                    "length": 32
                }
            ],
            "450": [
                {
                    "start": 2664,
                    "length": 32
                }
            ],
            "45890": [
                {
                    "start": 3128,
                    "length": 32
                }
            ],
            "45893": [
                {
                    "start": 692,
                    "length": 32
                },
                {
                    "start": 968,
                    "length": 32
                },
                {
                    "start": 1448,
                    "length": 32
                },
                {
                    "start": 1595,
                    "length": 32
                },
                {
                    "start": 1924,
                    "length": 32
                },
                {
                    "start": 2277,
                    "length": 32
                },
                {
                    "start": 2849,
                    "length": 32
                }
            ],
            "45895": [
                {
                    "start": 448,
                    "length": 32
                },
                {
                    "start": 870,
                    "length": 32
                },
                {
                    "start": 1826,
                    "length": 32
                },
                {
                    "start": 2335,
                    "length": 32
                },
                {
                    "start": 2964,
                    "length": 32
                },
                {
                    "start": 3082,
                    "length": 32
                }
            ],
            "588": [
                {
                    "start": 4068,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "ATTESTATION_SCHEMA()": "5bf2f20d",
        "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
        "cancelStatement(bytes32)": "039b9bf6",
        "checkStatement((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": "1272ff8b",
        "collectPayment(bytes32,bytes32)": "30088bc9",
        "getSchema()": "6b122fe0",
        "getStatement(bytes32)": "5cc02d2f",
        "isPayable()": "ce46e046",
        "makeStatement((address,uint256,address,bytes),uint64,bytes32)": "48f9fb46",
        "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
        "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
        "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
        "version()": "54fd4d50"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFulfillment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPaymentAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFromStatement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"cancelStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"statement\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"checkStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_payment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fulfillment\",\"type\":\"bytes32\"}],\"name\":\"collectPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getStatement\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"arbiter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC721PaymentObligation.StatementData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"makeStatement\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Statements/ERC721PaymentObligation.sol\":\"ERC721PaymentObligation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"lib/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808\",\"dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f\",\"dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828\",\"dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]},\"src/ArbiterUtils.sol\":{\"keccak256\":\"0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265\",\"dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ\"]},\"src/BaseStatement.sol\":{\"keccak256\":\"0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd\",\"dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778\",\"dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp\"]},\"src/Statements/ERC721PaymentObligation.sol\":{\"keccak256\":\"0xe5e30cb96bca54a33a34ed4ebec2fef10d0b42e2b0937b137372940d1e3b713f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fff3eef84288f399aec1f880d384c90ae1926103c7729f5c8fda162f31008165\",\"dweb:/ipfs/Qme8x7sk5zzuaehvC39LtXo5zYFXsjfKTgFpDabJuKbuB9\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IEAS",
                            "name": "_eas",
                            "type": "address"
                        },
                        {
                            "internalType": "contract ISchemaRegistry",
                            "name": "_schemaRegistry",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccessDenied"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AttestationRevoked"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DeadlineExpired"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidEAS"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidFulfillment"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidLength"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPayment"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPaymentAttestation"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotFromStatement"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPayable"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnauthorizedCall"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ATTESTATION_SCHEMA",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "attest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "uid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cancelStatement",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "statement",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "demand",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "checkStatement",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_payment",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_fulfillment",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "collectPayment",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSchema",
                    "outputs": [
                        {
                            "internalType": "struct SchemaRecord",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "contract ISchemaResolver",
                                    "name": "resolver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "string",
                                    "name": "schema",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "uid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStatement",
                    "outputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "isPayable",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ERC721PaymentObligation.StatementData",
                            "name": "data",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "tokenId",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "arbiter",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "demand",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint64",
                            "name": "expirationTime",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "refUID",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "makeStatement",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiAttest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiRevoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "revoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "receive"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The new attestation."
                        },
                        "returns": {
                            "_0": "Whether the attestation is valid."
                        }
                    },
                    "isPayable()": {
                        "returns": {
                            "_0": "Whether the resolver supports ETH transfers."
                        }
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The new attestations.",
                            "values": "Explicit ETH amounts which were sent with each attestation."
                        },
                        "returns": {
                            "_0": "Whether all the attestations are valid."
                        }
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The existing attestations to be revoked.",
                            "values": "Explicit ETH amounts which were sent with each revocation."
                        },
                        "returns": {
                            "_0": "Whether the attestations can be revoked."
                        }
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The existing attestation to be revoked."
                        },
                        "returns": {
                            "_0": "Whether the attestation can be revoked."
                        }
                    },
                    "version()": {
                        "returns": {
                            "_0": "Semver contract version as a string."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation and verifies whether it's valid."
                    },
                    "isPayable()": {
                        "notice": "Checks if the resolver can be sent ETH."
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes multiple attestations and verifies whether they are valid."
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation revocation and verifies if it can be revoked."
                    },
                    "version()": {
                        "notice": "Returns the full semver contract version."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eas/=lib/eas-contracts/contracts/",
                "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "eas-contracts/=lib/eas-contracts/contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/Statements/ERC721PaymentObligation.sol": "ERC721PaymentObligation"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/eas-contracts/contracts/Common.sol": {
                "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
                "urls": [
                    "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
                    "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/IEAS.sol": {
                "keccak256": "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
                "urls": [
                    "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
                    "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
                "keccak256": "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
                "urls": [
                    "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
                    "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/ISemver.sol": {
                "keccak256": "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
                "urls": [
                    "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
                    "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/Semver.sol": {
                "keccak256": "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
                "urls": [
                    "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
                    "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
                "keccak256": "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
                "urls": [
                    "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
                    "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
                "keccak256": "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
                "urls": [
                    "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
                    "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
                "keccak256": "0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de",
                "urls": [
                    "bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827",
                    "dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
                "keccak256": "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
                "urls": [
                    "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
                    "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
                "urls": [
                    "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
                    "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
                "urls": [
                    "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
                    "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
                "urls": [
                    "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
                    "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
                "keccak256": "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
                "urls": [
                    "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
                    "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
                "urls": [
                    "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
                    "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"
                ],
                "license": "MIT"
            },
            "src/ArbiterUtils.sol": {
                "keccak256": "0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c",
                "urls": [
                    "bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265",
                    "dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ"
                ],
                "license": "UNLICENSED"
            },
            "src/BaseStatement.sol": {
                "keccak256": "0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba",
                "urls": [
                    "bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd",
                    "dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs"
                ],
                "license": "UNLICENSED"
            },
            "src/IArbiter.sol": {
                "keccak256": "0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647",
                "urls": [
                    "bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778",
                    "dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp"
                ],
                "license": "UNLICENSED"
            },
            "src/Statements/ERC721PaymentObligation.sol": {
                "keccak256": "0xe5e30cb96bca54a33a34ed4ebec2fef10d0b42e2b0937b137372940d1e3b713f",
                "urls": [
                    "bzz-raw://fff3eef84288f399aec1f880d384c90ae1926103c7729f5c8fda162f31008165",
                    "dweb:/ipfs/Qme8x7sk5zzuaehvC39LtXo5zYFXsjfKTgFpDabJuKbuB9"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 51
}
