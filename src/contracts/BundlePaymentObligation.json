{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_eas",
                    "type": "address",
                    "internalType": "contract IEAS"
                },
                {
                    "name": "_schemaRegistry",
                    "type": "address",
                    "internalType": "contract ISchemaRegistry"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "receive",
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "ATTESTATION_SCHEMA",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "attest",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "cancelStatement",
            "inputs": [
                {
                    "name": "uid",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "checkStatement",
            "inputs": [
                {
                    "name": "statement",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "demand",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "collectPayment",
            "inputs": [
                {
                    "name": "_payment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_fulfillment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getSchema",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct SchemaRecord",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "resolver",
                            "type": "address",
                            "internalType": "contract ISchemaResolver"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "schema",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStatement",
            "inputs": [
                {
                    "name": "uid",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isPayable",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "makeStatement",
            "inputs": [
                {
                    "name": "data",
                    "type": "tuple",
                    "internalType": "struct BundlePaymentObligation.StatementData",
                    "components": [
                        {
                            "name": "erc20Addresses",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "erc20Amounts",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        },
                        {
                            "name": "erc721Addresses",
                            "type": "address[]",
                            "internalType": "address[]"
                        },
                        {
                            "name": "erc721Ids",
                            "type": "uint256[]",
                            "internalType": "uint256[]"
                        },
                        {
                            "name": "arbiter",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "demand",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "expirationTime",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "refUID",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "multiAttest",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "multiRevoke",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "revoke",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "error",
            "name": "AccessDenied",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AlreadyRevoked",
            "inputs": []
        },
        {
            "type": "error",
            "name": "AttestationRevoked",
            "inputs": []
        },
        {
            "type": "error",
            "name": "DeadlineExpired",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidEAS",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidFulfillment",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidLength",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPayment",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPaymentAttestation",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotFromStatement",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPayable",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnauthorizedCall",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "565:7018:50:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1322:4;565:7018;759:14:4;688:1:6;565:7018:50;783:14:4;-1:-1:-1;807:14:4;;708:26:6;704:76;;790:10;;;712::48;;732:32;;565:7018:50;;;;;;;795:48:48;;565:7018:50;795:48:48;;;565:7018:50;;;;;;;;;-1:-1:-1;565:7018:50;;;;;;;;;;-1:-1:-1;565:7018:50;;;;;;;;;;;827:4:48;565:7018:50;;;;1322:4;565:7018;;;;;;;;;;;;795:48:48;;;;;;;;;;-1:-1:-1;795:48:48;;;565:7018:50;774:69:48;;;565:7018:50;;;;;;;;;;;;;;;;;;;;807:14:4;565:7018:50;;;;;790:10:6;565:7018:50;;;;;732:32:48;565:7018:50;;;;;712:10:48;565:7018:50;;;;;;;;;;;;;;;;;;;;774:69:48;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:48:48;;;565:7018:50;795:48:48;;565:7018:50;795:48:48;;;;;;565:7018:50;795:48:48;;;:::i;:::-;;;565:7018:50;;;;;795:48:48;;;565:7018:50;-1:-1:-1;565:7018:50;;795:48:48;;;-1:-1:-1;795:48:48;;;565:7018:50;;;-1:-1:-1;565:7018:50;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;565:7018:50;;;704:76:6;757:12;;;-1:-1:-1;757:12:6;;-1:-1:-1;757:12:6;565:7018:50;;;;-1:-1:-1;565:7018:50;;;;;-1:-1:-1;565:7018:50;;;;;;-1:-1:-1;;565:7018:50;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;:::o",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "565:7018:50:-:0;;;;;;;;;;-1:-1:-1;565:7018:50;;;;;;;;;1183:12:6;;;1054:5;1183:12;565:7018:50;1054:5:6;1183:12;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:20:48;;565:7018:50;;;:::i;:::-;881:58:6;;:::i;:::-;1052:20:48;;:::i;:::-;565:7018:50;;-1:-1:-1;;;;;565:7018:50;;;1084:4:48;1052:37;565:7018:50;;;;;;;:::i;:::-;;881:58:6;;:::i;:::-;565:7018:50;;;1240:4:48;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:1461:6;565:7018:50;;;:::i;:::-;881:58:6;;;;;;:::i;:::-;1442:1461;:::i;:::-;565:7018:50;;;;;;;;;;;;:::i;:::-;881:58:6;;;;;;;:::i;:::-;3340:23;;;3336:76;;3869:13;;3844:9;3884:10;;;;;;565:7018:50;;;1489:1:0;565:7018:50;;;3896:19:6;4037:9;;;;;:::i;:::-;565:7018:50;4064:22:6;;;;4060:87;;4284:15;1489:1:0;4284:15:6;;;;;;:::i;:::-;;565:7018:50;3896:19:6;565:7018:50;3869:13:6;;;4060:87;-1:-1:-1;;;4113:19:6;;565:7018:50;4113:19:6;;3336:76;-1:-1:-1;;;3386:15:6;;565:7018:50;3386:15:6;;565:7018:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1619:44:48;;1644:18;565:7018:50;1619:44:48;;565:7018:50;;;1619:44:48;565:7018:50;;;;;;1619:14:48;565:7018:50;1619:44:48;;;;;;;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1619:44:48;;;;;;;;;;;;:::i;:::-;;;565:7018:50;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1619:44:48;;;565:7018:50;;;;;;;;1619:44:48;565:7018:50;;;;;;;;;;;;;;;;-1:-1:-1;;565:7018:50;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:23:48;;565:7018:50;;;1392:23:48;;565:7018:50;;;1392:23:48;565:7018:50;;;;;;1392:3:48;565:7018:50;1392:23:48;;;;;;;;;;;565:7018:50;1429:18:48;565:7018:50;1429:18:48;;565:7018:50;1451:18:48;1429:40;1425:71;;565:7018:50;;;;;;;;;;;;;;:::i;1425:71:48:-;-1:-1:-1;;;1478:18:48;;565:7018:50;;1478:18:48;1392:23;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;468:43:48;565:7018:50;;;;;;;;;;;;;;;;1072:24:4;1089:6;1072:24;:::i;:::-;1055:104;565:7018:50;1103:24:4;1120:6;1103:24;:::i;:::-;1151:6;;1134:24;1151:6;1134:24;:::i;:::-;1055:104;565:7018:50;;;;;;;;1055:104:4;;;;;;565:7018:50;;;:::i;:::-;;;-1:-1:-1;;;565:7018:50;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;565:7018:50;;;;;;;;;1055:104:4;565:7018:50;;;;;;:::i;:::-;;;1055:104:4;;565:7018:50;;1055:104:4;;;;;;:::i;:::-;565:7018:50;;;;;1055:104:4;565:7018:50;;1055:104:4;565:7018:50;;;;:::i;:::-;;;;;;-1:-1:-1;;565:7018:50;;;;;;-1:-1:-1;;;2962:28:50;;565:7018;;;2962:28;;;565:7018;;;;;;2962:3;-1:-1:-1;;;;;565:7018:50;;;;;;;2962:28;;;;;;;;;;;565:7018;;;;;;;;3033:32;;565:7018;;;3033:32;;565:7018;3033:32;;565:7018;3033:32;;;;;;;;;;;;;565:7018;3081:25;;;;:::i;:::-;3080:26;3076:66;;-1:-1:-1;;;;;3156:22:50;;;565:7018;;3152:56;;3356:54;3265:12;3254:41;3265:12;;;;;;565:7018;;;;3254:41;;;;;;:::i;:::-;3356:54;;;;:::i;:::-;3355:55;3351:113;;565:7018;;;;;;;;;:::i;:::-;;;3593:48;565:7018;3593:48;;565:7018;;;;;;;:::i;:::-;3567:18;565:7018;;;3540:103;;565:7018;3516:137;;;;;565:7018;;-1:-1:-1;;;3516:137:50;;565:7018;;;3516:137;;565:7018;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:137;;;;;;;;565:7018;3719:13;565:7018;3875:24;;3714:273;3773:3;3738:26;;565:7018;;3734:37;;;;;3916:60;;565:7018;;;-1:-1:-1;;;;;565:7018:50;3815:29;;565:7018;;3815:29;:::i;:::-;565:7018;;3875:27;:24;;;:27;:::i;:::-;565:7018;3946:21;;;565:7018;;;-1:-1:-1;;;3916:60:50;;-1:-1:-1;;;;;565:7018:50;;;;3916:60;;565:7018;;;;;;;;;;;;;;;;;;;;;;;3916:60;;;;;;;;;;;3773:3;565:7018;3773:3;;565:7018;3719:13;;3916:60;565:7018;3916:60;;;;;;;;;565:7018;3916:60;;;:::i;:::-;;;565:7018;;;;;;;;:::i;:::-;;3916:60;;565:7018;;;;3916:60;;;-1:-1:-1;3916:60:50;;;565:7018;;;;;;;;;3734:37;-1:-1:-1;;;565:7018:50;4072:27;;;4212:21;;;4053:13;4108:3;4072:27;;565:7018;;4068:38;;;;;565:7018;;-1:-1:-1;;;;;565:7018:50;4150:30;;565:7018;;4150:30;:::i;:::-;565:7018;;4212:24;:21;;;:24;:::i;:::-;565:7018;3946:21;4300;;565:7018;-1:-1:-1;;;;;565:7018:50;;4250:81;;;;;565:7018;;-1:-1:-1;;;4250:81:50;;4293:4;565:7018;4250:81;;565:7018;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;4250:81;;;;;;;;4108:3;;;565:7018;;4053:13;;4250:81;;;;;:::i;:::-;565:7018;;4250:81;;;;565:7018;;;;4250:81;565:7018;;;;;;;;;4250:81;565:7018;;;3516:137;;;;;:::i;:::-;565:7018;;3516:137;;;;3351:113;-1:-1:-1;;;3433:20:50;;565:7018;3433:20;;3152:56;-1:-1:-1;;;3192:16:50;;565:7018;4632:16;3192;3076:66;-1:-1:-1;;;3115:27:50;;565:7018;3115:27;;3033:32;;;;;;;;;;;;;;:::i;:::-;;;;;;565:7018;;;;;;;;;2962:28;;;;;;;;;;;;;;:::i;:::-;;;;;;565:7018;;;;;;;;;;;;;;;-1:-1:-1;;565:7018:50;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;565:7018:50;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;1552:19;;;;:::i;:::-;565:7018;1582:17;;;;-1:-1:-1;1582:17:50;;;;:::i;:::-;1552:54;;;;565:7018;;1649:13;1696:3;1668:19;;;;:::i;:::-;1664:30;;;;;;;1738:19;565:7018;1830:68;1738:22;;:19;;;;;:::i;:::-;:22;;:::i;:::-;;:::i;:::-;1791:20;:17;;;;;:::i;:20::-;565:7018;;-1:-1:-1;;;1830:68:50;;1864:10;565:7018;1830:68;;565:7018;1884:4;565:7018;;;;;;;;;;;;;;;;;;;;;;;1830:68;;;-1:-1:-1;;;;;565:7018:50;1830:68;;;;;;;;;;;1696:3;1829:69;;1825:131;;565:7018;;1649:13;;1825:131;-1:-1:-1;;;1925:16:50;;565:7018;1925:16;;1830:68;;;565:7018;1830:68;;;;;;;;;565:7018;1830:68;;;:::i;:::-;;;565:7018;;;;;;;:::i;:::-;1830:68;;;565:7018;;;;1830:68;;;-1:-1:-1;1830:68:50;;;565:7018;;;;;;;;;1664:30;;;;;;565:7018;2034:20;;;;;;;:::i;:::-;2065:14;;;;;-1:-1:-1;2065:14:50;;;;:::i;:::-;2034:52;;;;565:7018;;2130:13;;;2178:3;2149:20;;;;:::i;:::-;2145:31;;;;;;;2220:23;;:20;;;;;:::i;:23::-;2275:17;:14;;;;;:::i;:17::-;565:7018;;-1:-1:-1;;;;;565:7018:50;2306:70;;;;;565:7018;;-1:-1:-1;;;2306:70:50;;1864:10;565:7018;2306:70;;565:7018;1884:4;565:7018;;;;;;;;;;;;;;;;;;;;;2306:70;;;;;;;;;;;2178:3;;;565:7018;;2130:13;;2306:70;;;;;:::i;:::-;565:7018;;2306:70;;;;565:7018;;;;2306:70;565:7018;;;;;;;;;2306:70;565:7018;;;2145:31;;;565:7018;2145:31;565:7018;2145:31;565:7018;2145:31;;565:7018;;;;2734:16;565:7018;2734:16;;;565:7018;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;565:7018:50;;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;565:7018:50;;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;565:7018:50;;;;;;;:::i;:::-;;-1:-1:-1;;;;;565:7018:50;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;565:7018:50;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;2734:16;565:7018;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2734:16;;565:7018;;2734:16;;;;;;:::i;:::-;565:7018;;;;;;:::i;:::-;1864:10;565:7018;;;2515:284;;565:7018;;;2515:284;;565:7018;;;;2515:284;;565:7018;;2515:284;;565:7018;2515:284;565:7018;2515:284;;565:7018;;;;;;;:::i;:::-;2473:18;565:7018;;2428:386;;;565:7018;;;;;;;;;;;;2404:420;;;565:7018;2404:420;;565:7018;;;;;;;;;;;;;;;;;;;;2065:14;565:7018;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2404:420;565:7018;;2404:3;-1:-1:-1;;;;;565:7018:50;2404:420;;;;;;;;;;;2125:262;565:7018;;;;;;;;2404:420;;;565:7018;2404:420;;565:7018;2404:420;;;;;;565:7018;2404:420;;;:::i;:::-;;;565:7018;;;;;;;;2404:420;;;;;;-1:-1:-1;2404:420:50;;565:7018;;;-1:-1:-1;;;565:7018:50;;;;;;;;;;;;;;;;;2065:14;;565:7018;;;;-1:-1:-1;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;565:7018:50;;;;-1:-1:-1;;;4479:23:50;;565:7018;;;4479:23;;;565:7018;;;4479:3;-1:-1:-1;;;;;565:7018:50;;4479:23;;;;565:7018;4479:23;;;;;;;;;;;565:7018;-1:-1:-1;4530:21:50;;;565:7018;-1:-1:-1;;;;;565:7018:50;4516:10;:35;4512:66;;-1:-1:-1;;;;;4592:26:50;;;565:7018;;4588:60;;565:7018;;;;;;;;:::i;:::-;;;4723:43;565:7018;4723:43;;565:7018;;;;;;;:::i;:::-;4697:18;565:7018;;;4670:98;;565:7018;4659:110;;;;;565:7018;;-1:-1:-1;;;4659:110:50;;565:7018;;;4659:110;;565:7018;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4659:110;;;;;;;;565:7018;4819:16;;4808:45;4819:16;;;565:7018;;;;4808:45;;;;;;:::i;:::-;4914:13;565:7018;5056:17;;4914:13;4961:3;4933:19;;565:7018;;;4929:30;;;;;565:7018;5090:49;565:7018;;5003:22;565:7018;;;;;;5003:22;;:::i;:::-;565:7018;;5056:20;:17;;;:20;:::i;:::-;565:7018;;;-1:-1:-1;;;5090:49:50;;4516:10;565:7018;5090:49;;565:7018;;;;;;;;;;;;;;;;;;;;;5090:49;;;;;;;;;;;4961:3;565:7018;4961:3;;565:7018;4914:13;;5090:49;565:7018;5090:49;;;;;;;;;565:7018;5090:49;;;:::i;:::-;;;565:7018;;;;;;;;:::i;:::-;;5090:49;;;;;-1:-1:-1;5090:49:50;;4929:30;;565:7018;5230:20;;5356:14;;;4929:30;5259:3;5230:20;;565:7018;;5226:31;;;;;565:7018;;-1:-1:-1;;;;;565:7018:50;5301:23;;565:7018;;5301:23;:::i;:::-;565:7018;;5356:17;:14;;;:17;:::i;:::-;565:7018;5387:70;;;;;;565:7018;;-1:-1:-1;;;5387:70:50;;5430:4;565:7018;5387:70;;565:7018;4516:10;565:7018;;;;;;;;;;;;;;;;;;;;;5387:70;;;;;;;;5259:3;;;565:7018;;5211:13;;5387:70;;;;;:::i;:::-;565:7018;;5387:70;;;;4659:110;;;4808:45;4659:110;;4819:16;4659:110;;:::i;:::-;;;;;;4512:66;-1:-1:-1;;;4560:18:50;;565:7018;4560:18;;4479:23;;;;;;;;;;;;;;:::i;:::-;;;;;565:7018;;;-1:-1:-1;;;;;565:7018:50;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;:::o;:::-;;;;-1:-1:-1;565:7018:50;;;;;-1:-1:-1;565:7018:50;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;565:7018:50;;;;;;:::o;:::-;-1:-1:-1;;;;;565:7018:50;;;;;;-1:-1:-1;;565:7018:50;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;565:7018:50;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;565:7018:50;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;565:7018:50;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;565:7018:50;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;565:7018:50;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;-1:-1:-1;;565:7018:50;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;565:7018:50;;;;;;:::o;:::-;;;-1:-1:-1;;;;;565:7018:50;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;:::i;:::-;;;;;;:::o;:::-;-1:-1:-1;;;;;565:7018:50;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;565:7018:50;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;565:7018:50;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;565:7018:50;;;;;;;;;;;;;;;;;:::o;5502:600::-;5693:27;;;:::i;:::-;5692:28;5688:46;;5776:43;5787:14;5863:35;5787:14;;;5776:43;565:7018;;;5776:43;;;;;;:::i;:::-;565:7018;5776:43;565:7018;;;5863:35;;;;;;:::i;:::-;5943:38;;;;:::i;:::-;:79;;;;5502:600;5943:152;;;5936:159;;5502:600;:::o;5943:152::-;6048:14;;;;;;;5776:43;565:7018;;;;6038:25;6077:17;;;5776:43;565:7018;;;;6067:28;6038:57;5502:600;:::o;5943:79::-;5985:15;;;;565:7018;6004:18;;;565:7018;-1:-1:-1;;;;;565:7018:50;;;;;5985:37;;-1:-1:-1;5943:79:50;;5688:46;5722:12;;565:7018;5722:12;:::o;565:7018::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1442:1461:6:-;;;;1649:23;;;1645:76;;2190:1;;2153:9;2193:10;;;;;;2885:11;;;;;;1489:1:0;1442:1461:6;:::o;2205:19::-;2346:9;;;;;:::i;:::-;565:7018:50;2373:22:6;;;2369:87;;2594:15;;;;;:::i;:::-;1084:4:48;;-1:-1:-1;;;;;565:7018:50;1052:20:48;;;;;:::i;:::-;565:7018:50;1052:37:48;2580:84:6;;1489:1:0;565:7018:50;;2205:19:6;565:7018:50;2178:13:6;;;2580:84;2637:12;;;;;;;2190:1;2637:12;:::o;2369:87::-;4113:19;;;2190:1;2422:19;;2190:1;2422:19;1645:76;3386:15;;;1695;;;;;606:258:47;-1:-1:-1;;;;;351:24:47;;;565:7018:50;;351:29:47;;;:87;;;;606:258;714:54;;;564:24;;565:7018:50;-1:-1:-1;;;;;565:7018:50;778:57:47;;853:4;606:258;:::o;778:57::-;815:20;;;-1:-1:-1;815:20:47;;-1:-1:-1;815:20:47;714:54;751:17;;;-1:-1:-1;751:17:47;;-1:-1:-1;751:17:47;351:87;423:15;;;-1:-1:-1;351:87:47;;;6622:959:50;;6740:16;;565:7018;6767:16;;565:7018;6740:50;6736:68;;6818:14;;;;;565:7018;6843:14;6818;6843;;;;;565:7018;6818:46;6814:64;;6892:17;;;;;565:7018;6920:17;6892;6920;;;;;565:7018;6892:52;6888:70;;6972:11;;;;;565:7018;6994:11;6972;6994;;;;;565:7018;6972:40;6968:58;;565:7018;7118:3;7093:16;;565:7018;;7089:27;;;;;-1:-1:-1;;;;;565:7018:50;7141:19;;565:7018;;7141:19;:::i;:::-;565:7018;;;;;;;7164:19;:16;;;:19;:::i;:::-;565:7018;;7141:42;7137:60;;7215:17;:14;;;:17;:::i;:::-;565:7018;7235:17;:14;;;:17;:::i;:::-;565:7018;-1:-1:-1;7211:55:50;;565:7018;;7074:13;;7211:55;7254:12;;;;;;;;;565:7018;7254:12;:::o;7089:27::-;;;;;;;;;;;565:7018;7397:3;7371:17;;565:7018;;7367:28;;;;;-1:-1:-1;;;;;565:7018:50;7420:20;;565:7018;;7420:20;:::i;:::-;565:7018;;;;;;;7444:20;:17;;;:20;:::i;:::-;565:7018;;7420:44;7416:62;;7496:14;:11;;;:14;:::i;:::-;565:7018;7514:14;:11;;;:14;:::i;:::-;565:7018;7496:32;7492:50;;565:7018;;7352:13;;7492:50;7530:12;;;;;565:7018;7530:12;:::o;7367:28::-;;;;;;;565:7018;6622:959;:::o;6968:58::-;7014:12;;;;;;;;565:7018;7014:12;:::o;6888:70::-;6946:12;;;;;;565:7018;6946:12;:::o;6814:64::-;6866:12;;;;565:7018;6866:12;:::o;6108:508::-;;;6391:14;;;565:7018;6391:19;6387:65;;565:7018;;;;;;;6391:14;565:7018;;;;;6528:19;;;565:7018;;6577:18;;;565:7018;;;;;;;;;;;;;;6519:90;;565:7018;6519:90;;;565:7018;;;;;;:::i;:::-;;;;-1:-1:-1;;565:7018:50;;;;;;;:::i;:::-;;;;;;6519:90;;;;;;;;;565:7018;6519:90;;;6512:97;6108:508;:::o;6519:90::-;;;565:7018;6519:90;;565:7018;6519:90;;;;;;565:7018;6519:90;;;:::i;:::-;;;565:7018;;;;;;;:::i;6519:90::-;;;-1:-1:-1;6519:90:50;;;565:7018;;;;;;;;;6387:65;565:7018;;;;;6419:33;6412:40;:::o;637:632:41:-;759:17;-1:-1:-1;25444:17:44;-1:-1:-1;;;25444:17:44;;;25440:103;;637:632:41;25560:17:44;25569:8;26140:7;25560:17;;;25556:103;;637:632:41;25685:8:44;25676:17;;;25672:103;;637:632:41;25801:7:44;25792:16;;;25788:100;;637:632:41;25914:7:44;25905:16;;;25901:100;;637:632:41;26027:7:44;26018:16;;;26014:100;;637:632:41;26131:16:44;;26127:66;;637:632:41;26140:7:44;874:92:41;779:1;565:7018:50;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;874:92:41;;;979:247;-1:-1:-1;;565:7018:50;;-1:-1:-1;;;1033:111:41;;;;565:7018:50;1033:111:41;565:7018:50;1194:10:41;;1190:21;;26140:7:44;979:247:41;;;;1190:21;1206:5;;637:632;:::o;26127:66:44:-;26177:1;565:7018:50;;;;26127:66:44;;26014:100;26027:7;26098:1;565:7018:50;;;;26014:100:44;;;25901;25914:7;25985:1;565:7018:50;;;;25901:100:44;;;25788;25801:7;25872:1;565:7018:50;;;;25788:100:44;;;25672:103;25685:8;25758:2;565:7018:50;;;;25672:103:44;;;25556;25569:8;25642:2;565:7018:50;;;;25556:103:44;;;25440;-1:-1:-1;25526:2:44;;-1:-1:-1;;;;565:7018:50;;25440:103:44;;6040:128:6;6109:4;-1:-1:-1;;;;;565:7018:50;6087:10:6;:27;6083:79;;6040:128::o;6083:79::-;6137:14;;;;;;;",
        "linkReferences": {},
        "immutableReferences": {
            "446": [
                {
                    "start": 1298,
                    "length": 32
                }
            ],
            "448": [
                {
                    "start": 1344,
                    "length": 32
                }
            ],
            "450": [
                {
                    "start": 1387,
                    "length": 32
                }
            ],
            "45890": [
                {
                    "start": 592,
                    "length": 32
                }
            ],
            "45893": [
                {
                    "start": 1038,
                    "length": 32
                },
                {
                    "start": 1592,
                    "length": 32
                },
                {
                    "start": 3860,
                    "length": 32
                },
                {
                    "start": 4158,
                    "length": 32
                }
            ],
            "45895": [
                {
                    "start": 542,
                    "length": 32
                },
                {
                    "start": 1094,
                    "length": 32
                },
                {
                    "start": 1239,
                    "length": 32
                },
                {
                    "start": 1815,
                    "length": 32
                },
                {
                    "start": 3687,
                    "length": 32
                },
                {
                    "start": 4298,
                    "length": 32
                }
            ],
            "588": [
                {
                    "start": 8003,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "ATTESTATION_SCHEMA()": "5bf2f20d",
        "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
        "cancelStatement(bytes32)": "039b9bf6",
        "checkStatement((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": "1272ff8b",
        "collectPayment(bytes32,bytes32)": "30088bc9",
        "getSchema()": "6b122fe0",
        "getStatement(bytes32)": "5cc02d2f",
        "isPayable()": "ce46e046",
        "makeStatement((address[],uint256[],address[],uint256[],address,bytes),uint64,bytes32)": "1229b903",
        "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
        "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
        "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
        "version()": "54fd4d50"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFulfillment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPaymentAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFromStatement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"cancelStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"statement\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"checkStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_payment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fulfillment\",\"type\":\"bytes32\"}],\"name\":\"collectPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getStatement\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"erc20Addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc20Amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"erc721Addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"erc721Ids\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"arbiter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"}],\"internalType\":\"struct BundlePaymentObligation.StatementData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"makeStatement\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Statements/BundlePaymentObligation.sol\":\"BundlePaymentObligation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"lib/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808\",\"dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f\",\"dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828\",\"dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]},\"src/ArbiterUtils.sol\":{\"keccak256\":\"0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265\",\"dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ\"]},\"src/BaseStatement.sol\":{\"keccak256\":\"0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd\",\"dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778\",\"dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp\"]},\"src/Statements/BundlePaymentObligation.sol\":{\"keccak256\":\"0xae89e451deb218f2473c4c25993a8c58166118a69cd6409cd87b087e4f75d71d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e4146f1693da1a36b550429a439b2fa3729b3f9d9c9e0b74f7895e625be7a8e3\",\"dweb:/ipfs/QmWVhfHxdsp5spjV1eXWdr278fCQuALEJYv35VTkRvZcG4\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IEAS",
                            "name": "_eas",
                            "type": "address"
                        },
                        {
                            "internalType": "contract ISchemaRegistry",
                            "name": "_schemaRegistry",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccessDenied"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AlreadyRevoked"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AttestationRevoked"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DeadlineExpired"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidEAS"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidFulfillment"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidLength"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPayment"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPaymentAttestation"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotFromStatement"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPayable"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnauthorizedCall"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ATTESTATION_SCHEMA",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "attest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "uid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cancelStatement",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "statement",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "demand",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "checkStatement",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_payment",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_fulfillment",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "collectPayment",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSchema",
                    "outputs": [
                        {
                            "internalType": "struct SchemaRecord",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "contract ISchemaResolver",
                                    "name": "resolver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "string",
                                    "name": "schema",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "uid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStatement",
                    "outputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "isPayable",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct BundlePaymentObligation.StatementData",
                            "name": "data",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address[]",
                                    "name": "erc20Addresses",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "erc20Amounts",
                                    "type": "uint256[]"
                                },
                                {
                                    "internalType": "address[]",
                                    "name": "erc721Addresses",
                                    "type": "address[]"
                                },
                                {
                                    "internalType": "uint256[]",
                                    "name": "erc721Ids",
                                    "type": "uint256[]"
                                },
                                {
                                    "internalType": "address",
                                    "name": "arbiter",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "demand",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint64",
                            "name": "expirationTime",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "refUID",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "makeStatement",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiAttest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiRevoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "revoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "receive"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The new attestation."
                        },
                        "returns": {
                            "_0": "Whether the attestation is valid."
                        }
                    },
                    "isPayable()": {
                        "returns": {
                            "_0": "Whether the resolver supports ETH transfers."
                        }
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The new attestations.",
                            "values": "Explicit ETH amounts which were sent with each attestation."
                        },
                        "returns": {
                            "_0": "Whether all the attestations are valid."
                        }
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The existing attestations to be revoked.",
                            "values": "Explicit ETH amounts which were sent with each revocation."
                        },
                        "returns": {
                            "_0": "Whether the attestations can be revoked."
                        }
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The existing attestation to be revoked."
                        },
                        "returns": {
                            "_0": "Whether the attestation can be revoked."
                        }
                    },
                    "version()": {
                        "returns": {
                            "_0": "Semver contract version as a string."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation and verifies whether it's valid."
                    },
                    "isPayable()": {
                        "notice": "Checks if the resolver can be sent ETH."
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes multiple attestations and verifies whether they are valid."
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation revocation and verifies if it can be revoked."
                    },
                    "version()": {
                        "notice": "Returns the full semver contract version."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eas/=lib/eas-contracts/contracts/",
                "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "eas-contracts/=lib/eas-contracts/contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/Statements/BundlePaymentObligation.sol": "BundlePaymentObligation"
            },
            "evmVersion": "paris",
            "libraries": {},
            "viaIR": true
        },
        "sources": {
            "lib/eas-contracts/contracts/Common.sol": {
                "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
                "urls": [
                    "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
                    "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/IEAS.sol": {
                "keccak256": "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
                "urls": [
                    "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
                    "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
                "keccak256": "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
                "urls": [
                    "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
                    "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/ISemver.sol": {
                "keccak256": "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
                "urls": [
                    "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
                    "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/Semver.sol": {
                "keccak256": "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
                "urls": [
                    "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
                    "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
                "keccak256": "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
                "urls": [
                    "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
                    "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
                "keccak256": "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
                "urls": [
                    "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
                    "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
                "urls": [
                    "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
                    "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
                "keccak256": "0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de",
                "urls": [
                    "bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827",
                    "dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
                "keccak256": "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
                "urls": [
                    "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
                    "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
                "urls": [
                    "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
                    "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
                "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
                "urls": [
                    "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
                    "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
                "urls": [
                    "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
                    "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
                "keccak256": "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
                "urls": [
                    "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
                    "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
                "urls": [
                    "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
                    "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"
                ],
                "license": "MIT"
            },
            "src/ArbiterUtils.sol": {
                "keccak256": "0x1ae482f265bdcbd8bb02a1f6ef7ffdbca8957e8d2b34aae31ba67c1f8d53f11c",
                "urls": [
                    "bzz-raw://c23924e0e10367b023c4a0b6d64bda4303e2b3d96bed226fc7623b9b7255b265",
                    "dweb:/ipfs/QmTEJsmSyRACQqWDL1rN9vTgeCXZf6wqBrX8cBeYHh2UtZ"
                ],
                "license": "UNLICENSED"
            },
            "src/BaseStatement.sol": {
                "keccak256": "0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba",
                "urls": [
                    "bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd",
                    "dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs"
                ],
                "license": "UNLICENSED"
            },
            "src/IArbiter.sol": {
                "keccak256": "0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647",
                "urls": [
                    "bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778",
                    "dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp"
                ],
                "license": "UNLICENSED"
            },
            "src/Statements/BundlePaymentObligation.sol": {
                "keccak256": "0xae89e451deb218f2473c4c25993a8c58166118a69cd6409cd87b087e4f75d71d",
                "urls": [
                    "bzz-raw://e4146f1693da1a36b550429a439b2fa3729b3f9d9c9e0b74f7895e625be7a8e3",
                    "dweb:/ipfs/QmWVhfHxdsp5spjV1eXWdr278fCQuALEJYv35VTkRvZcG4"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 50
}
