{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_eas",
                    "type": "address",
                    "internalType": "contract IEAS"
                },
                {
                    "name": "_schemaRegistry",
                    "type": "address",
                    "internalType": "contract ISchemaRegistry"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "receive",
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "ATTESTATION_SCHEMA",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "DEMAND_ABI",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "IS_REVOCABLE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "SCHEMA_ABI",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "_checkIdentical",
            "inputs": [
                {
                    "name": "statement",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "demand",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "attest",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "checkStatement",
            "inputs": [
                {
                    "name": "statement",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "demand",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "counteroffer",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "eas",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IEAS"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getDemandAbi",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "getSchemaAbi",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "isPayable",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "makeStatement",
            "inputs": [
                {
                    "name": "data",
                    "type": "tuple",
                    "internalType": "struct DockerResultStatement.StatementData",
                    "components": [
                        {
                            "name": "resultCID",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                },
                {
                    "name": "refUID",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "multiAttest",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "multiRevoke",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "revoke",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "schemaRegistry",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract ISchemaRegistry"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "error",
            "name": "AccessDenied",
            "inputs": []
        },
        {
            "type": "error",
            "name": "DeadlineExpired",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidDemand",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidEAS",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidLength",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidResultAttestation",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPayable",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "0x61016060405234801561001157600080fd5b5060405161142338038061142383398101604081905261003091610141565b60408051808201909152601081526f1cdd1c9a5b99c81c995cdd5b1d10d25160821b6020820152600160a052600360c052600060e081905283918391836001600160a01b038116610094576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b0390811661010052848116610140528316610120819052604051630c1af44f60e31b81526360d7a278906100d79085903090869060040161017b565b6020604051808303816000875af11580156100f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011a91906101e1565b608052506101fa945050505050565b6001600160a01b038116811461013e57600080fd5b50565b6000806040838503121561015457600080fd5b825161015f81610129565b602084015190925061017081610129565b809150509250929050565b606081526000845180606084015260005b818110156101a9576020818801810151608086840101520161018c565b50600060808285018101919091526001600160a01b03959095166020840152921515604083015250601f909101601f19160101919050565b6000602082840312156101f357600080fd5b5051919050565b60805160a05160c05160e0516101005161012051610140516111ba610269600039600081816102f9015261046f0152600061020301526000610938015260006105eb015260006105c201526000610599015260008181610292015281816104a901526107f001526111ba6000f3fe6080604052600436106101025760003560e01c80637a9f479e11610095578063ce46e04611610064578063ce46e04614610341578063e49617e114610355578063e60c350514610368578063f0bebf031461037b578063fdc5b3f4146103b357600080fd5b80637a9f479e146102b45780638150864d146102e757806388e5b2d91461031b57806391db0b7e1461032e57600080fd5b80634441bbd9116100d15780634441bbd9146101f1578063455577cc1461023d57806354fd4d501461026b5780635bf2f20d1461028057600080fd5b80631272ff8b1461012557806313da12b31461015a5780632083d47f1461016f578063344bd2d9146101b857600080fd5b3661012057604051631574f9f360e01b815260040160405180910390fd5b600080fd5b34801561013157600080fd5b50610145610140366004610c70565b6103ee565b60405190151581526020015b60405180910390f35b34801561016657600080fd5b50610145600081565b34801561017b57600080fd5b506101ab6040518060400160405280601081526020016f1cdd1c9a5b99c81c995cdd5b1d10d25160821b81525081565b6040516101519190610d31565b3480156101c457600080fd5b5060408051808201909152601081526f1cdd1c9a5b99c81c995cdd5b1d10d25160821b60208201526101ab565b3480156101fd57600080fd5b506102257f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610151565b34801561024957600080fd5b5061025d610258366004610d44565b61046b565b604051908152602001610151565b34801561027757600080fd5b506101ab610592565b34801561028c57600080fd5b5061025d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c057600080fd5b506101456102cf366004610d8d565b80516020918201206101209092015180519101201490565b3480156102f357600080fd5b506102257f000000000000000000000000000000000000000000000000000000000000000081565b610145610329366004610e3f565b610635565b61014561033c366004610e3f565b610704565b34801561034d57600080fd5b506000610145565b610145610363366004610eae565b6107c3565b610145610376366004610eae565b6107d8565b34801561038757600080fd5b5060408051808201909152600f81526e1cdd1c9a5b99c81c5d595c9e50d251608a1b60208201526101ab565b3480156103bf57600080fd5b506101ab6040518060400160405280600f81526020016e1cdd1c9a5b99c81c5d595c9e50d251608a1b81525081565b60006103f9846107ec565b61040557506000610464565b60a08401511580159061041c5750818460a0015114155b1561042957506000610464565b60008461012001518060200190518101906104449190610f8c565b905060008480602001905181019061045c9190610f8c565b506001925050505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f17325e760405180604001604052807f000000000000000000000000000000000000000000000000000000000000000081526020016040518060c00160405280336001600160a01b0316815260200160006001600160401b03168152602001600015158152602001878152602001886040516020016105179190610fc0565b604051602081830303815290604052815260200160008152508152506040518263ffffffff1660e01b815260040161054f9190611038565b6020604051808303816000875af115801561056e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046491906110ba565b60606105bd7f000000000000000000000000000000000000000000000000000000000000000061089b565b6105e67f000000000000000000000000000000000000000000000000000000000000000061089b565b61060f7f000000000000000000000000000000000000000000000000000000000000000061089b565b604051602001610621939291906110d3565b604051602081830303815290604052905090565b600061063f61092d565b838281146106605760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156106f457600086868381811061068057610680611132565b905060200201359050828111156106aa5760405163044044a560e21b815260040160405180910390fd5b6106d78989848181106106bf576106bf611132565b90506020028101906106d19190611148565b50600190565b6106e85760009450505050506106fc565b90910390600101610664565b506001925050505b949350505050565b600061070e61092d565b8382811461072f5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156106f457600086868381811061074f5761074f611132565b905060200201359050828111156107795760405163044044a560e21b815260040160405180910390fd5b6107a689898481811061078e5761078e611132565b90506020028101906107a09190611148565b82610978565b6107b75760009450505050506106fc565b90910390600101610733565b60006107cd61092d565b60015b90505b919050565b60006107e261092d565b6107d08234610978565b60007f000000000000000000000000000000000000000000000000000000000000000082602001511461082157506000919050565b60608201516001600160401b03161580159061084957504282606001516001600160401b0316105b1561086757604051631ab7da6b60e01b815260040160405180910390fd5b60808201516001600160401b031615610893576040516341bc07ff60e11b815260040160405180910390fd5b506001919050565b606060006108a88361099d565b60010190506000816001600160401b038111156108c7576108c7610a76565b6040519080825280601f01601f1916602001820160405280156108f1576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846108fb57509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461097657604051634ca8886760e01b815260040160405180910390fd5b565b60003061098c610100850160e08601611169565b6001600160a01b0316149392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106109dc5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610a08576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610a2657662386f26fc10000830492506010015b6305f5e1008310610a3e576305f5e100830492506008015b6127108310610a5257612710830492506004015b60648310610a64576064830492506002015b600a8310610a70576001015b92915050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715610aaf57610aaf610a76565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610add57610add610a76565b604052919050565b80356001600160401b03811681146107d357600080fd5b80356001600160a01b03811681146107d357600080fd5b803580151581146107d357600080fd5b60006001600160401b03821115610b3c57610b3c610a76565b50601f01601f191660200190565b600082601f830112610b5b57600080fd5b8135610b6e610b6982610b23565b610ab5565b818152846020838601011115610b8357600080fd5b816020850160208301376000918101602001919091529392505050565b60006101408284031215610bb357600080fd5b610bbb610a8c565b82358152602080840135908201529050610bd760408301610ae5565b6040820152610be860608301610ae5565b6060820152610bf960808301610ae5565b608082015260a08281013590820152610c1460c08301610afc565b60c0820152610c2560e08301610afc565b60e0820152610c376101008301610b13565b6101008201526101208201356001600160401b03811115610c5757600080fd5b610c6384828501610b4a565b6101208301525092915050565b600080600060608486031215610c8557600080fd5b83356001600160401b03811115610c9b57600080fd5b610ca786828701610ba0565b93505060208401356001600160401b03811115610cc357600080fd5b610ccf86828701610b4a565b93969395505050506040919091013590565b60005b83811015610cfc578181015183820152602001610ce4565b50506000910152565b60008151808452610d1d816020860160208601610ce1565b601f01601f19169290920160200192915050565b6020815260006104646020830184610d05565b60008060408385031215610d5757600080fd5b82356001600160401b03811115610d6d57600080fd5b830160208186031215610d7f57600080fd5b946020939093013593505050565b60008060408385031215610da057600080fd5b82356001600160401b03811115610db657600080fd5b610dc285828601610ba0565b92505060208301356001600160401b03811115610dde57600080fd5b610dea85828601610b4a565b9150509250929050565b60008083601f840112610e0657600080fd5b5081356001600160401b03811115610e1d57600080fd5b6020830191508360208260051b8501011115610e3857600080fd5b9250929050565b60008060008060408587031215610e5557600080fd5b84356001600160401b03811115610e6b57600080fd5b610e7787828801610df4565b90955093505060208501356001600160401b03811115610e9657600080fd5b610ea287828801610df4565b95989497509550505050565b600060208284031215610ec057600080fd5b81356001600160401b03811115610ed657600080fd5b8201610140818503121561046457600080fd5b600060208284031215610efb57600080fd5b604051602081016001600160401b0381118282101715610f1d57610f1d610a76565b806040525080915082516001600160401b03811115610f3b57600080fd5b8301601f81018513610f4c57600080fd5b8051610f5a610b6982610b23565b818152866020838501011115610f6f57600080fd5b610f80826020830160208601610ce1565b90925250909392505050565b600060208284031215610f9e57600080fd5b81516001600160401b03811115610fb457600080fd5b6106fc84828501610ee9565b6020815260008235601e19843603018112610fda57600080fd5b83016020810190356001600160401b03811115610ff657600080fd5b80360382131561100557600080fd5b602080850152806040850152808260608601376000606082860101526060601f19601f8301168501019250505092915050565b60208152815160208201526000602083015160408084015260018060a01b0381511660608401526001600160401b0360208201511660808401526040810151151560a0840152606081015160c0840152608081015160c060e08501526110a2610120850182610d05565b905060a0820151610100850152809250505092915050565b6000602082840312156110cc57600080fd5b5051919050565b600084516110e5818460208901610ce1565b601760f91b9083019081528451611103816001840160208901610ce1565b601760f91b600192909101918201528351611125816002840160208801610ce1565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e1983360301811261115f57600080fd5b9190910192915050565b60006020828403121561117b57600080fd5b61046482610afc56fea2646970667358221220f82b0516578e7e0761a8c1227e7d24e4c5d7d8aa00cb386e3c763009e8a5ce3a64736f6c634300081a0033",
        "sourceMap": "294:1893:39:-:0;;;694:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;792:10;;;;;;;;;;;;-1:-1:-1;;;792:10:39;;;;680:1:5;705:14:3;;683:1:5;729:14:3;;-1:-1:-1;753:13:3;;;;769:4:39;;775:15;;769:4;-1:-1:-1;;;;;703:26:5;::::1;699:76;;752:12;;-1:-1:-1::0;;;752:12:5::1;;;;;;;;;;;699:76;-1:-1:-1::0;;;;;785:10:5;;::::1;;::::0;595::37;;::::1;;::::0;615:32;::::1;;::::0;;;678:48:::1;::::0;-1:-1:-1;;;678:48:37;;:23:::1;::::0;:48:::1;::::0;702:6;;710:4:::1;::::0;716:9;;678:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;657:69;::::0;-1:-1:-1;294:1893:39;;-1:-1:-1;;;;;294:1893:39;14:137:42;-1:-1:-1;;;;;95:31:42;;85:42;;75:70;;141:1;138;131:12;75:70;14:137;:::o;156:432::-;270:6;278;331:2;319:9;310:7;306:23;302:32;299:52;;;347:1;344;337:12;299:52;379:9;373:16;398:37;429:5;398:37;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:39:42;483:25;517:39;:::i;:::-;575:7;565:17;;;156:432;;;;;:::o;593:734::-;812:2;801:9;794:21;775:4;844:6;838:13;887:6;882:2;871:9;867:18;860:34;912:1;922:145;936:6;933:1;930:13;922:145;;;1050:4;1034:14;;;1030:25;;1024:32;1018:3;999:17;;;995:27;988:69;951:12;922:145;;;-1:-1:-1;1117:1:42;1111:3;1087:22;;;1083:32;;1076:43;;;;-1:-1:-1;;;;;1229:32:42;;;;1222:4;1207:20;;1200:62;1305:14;;1298:22;1293:2;1278:18;;1271:50;-1:-1:-1;1180:2:42;1159:15;;;-1:-1:-1;;1155:29:42;1140:45;1136:55;;;-1:-1:-1;593:734:42:o;1332:184::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:16:42;;1332:184;-1:-1:-1;1332:184:42:o;:::-;294:1893:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x6080604052600436106101025760003560e01c80637a9f479e11610095578063ce46e04611610064578063ce46e04614610341578063e49617e114610355578063e60c350514610368578063f0bebf031461037b578063fdc5b3f4146103b357600080fd5b80637a9f479e146102b45780638150864d146102e757806388e5b2d91461031b57806391db0b7e1461032e57600080fd5b80634441bbd9116100d15780634441bbd9146101f1578063455577cc1461023d57806354fd4d501461026b5780635bf2f20d1461028057600080fd5b80631272ff8b1461012557806313da12b31461015a5780632083d47f1461016f578063344bd2d9146101b857600080fd5b3661012057604051631574f9f360e01b815260040160405180910390fd5b600080fd5b34801561013157600080fd5b50610145610140366004610c70565b6103ee565b60405190151581526020015b60405180910390f35b34801561016657600080fd5b50610145600081565b34801561017b57600080fd5b506101ab6040518060400160405280601081526020016f1cdd1c9a5b99c81c995cdd5b1d10d25160821b81525081565b6040516101519190610d31565b3480156101c457600080fd5b5060408051808201909152601081526f1cdd1c9a5b99c81c995cdd5b1d10d25160821b60208201526101ab565b3480156101fd57600080fd5b506102257f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610151565b34801561024957600080fd5b5061025d610258366004610d44565b61046b565b604051908152602001610151565b34801561027757600080fd5b506101ab610592565b34801561028c57600080fd5b5061025d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c057600080fd5b506101456102cf366004610d8d565b80516020918201206101209092015180519101201490565b3480156102f357600080fd5b506102257f000000000000000000000000000000000000000000000000000000000000000081565b610145610329366004610e3f565b610635565b61014561033c366004610e3f565b610704565b34801561034d57600080fd5b506000610145565b610145610363366004610eae565b6107c3565b610145610376366004610eae565b6107d8565b34801561038757600080fd5b5060408051808201909152600f81526e1cdd1c9a5b99c81c5d595c9e50d251608a1b60208201526101ab565b3480156103bf57600080fd5b506101ab6040518060400160405280600f81526020016e1cdd1c9a5b99c81c5d595c9e50d251608a1b81525081565b60006103f9846107ec565b61040557506000610464565b60a08401511580159061041c5750818460a0015114155b1561042957506000610464565b60008461012001518060200190518101906104449190610f8c565b905060008480602001905181019061045c9190610f8c565b506001925050505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f17325e760405180604001604052807f000000000000000000000000000000000000000000000000000000000000000081526020016040518060c00160405280336001600160a01b0316815260200160006001600160401b03168152602001600015158152602001878152602001886040516020016105179190610fc0565b604051602081830303815290604052815260200160008152508152506040518263ffffffff1660e01b815260040161054f9190611038565b6020604051808303816000875af115801561056e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046491906110ba565b60606105bd7f000000000000000000000000000000000000000000000000000000000000000061089b565b6105e67f000000000000000000000000000000000000000000000000000000000000000061089b565b61060f7f000000000000000000000000000000000000000000000000000000000000000061089b565b604051602001610621939291906110d3565b604051602081830303815290604052905090565b600061063f61092d565b838281146106605760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156106f457600086868381811061068057610680611132565b905060200201359050828111156106aa5760405163044044a560e21b815260040160405180910390fd5b6106d78989848181106106bf576106bf611132565b90506020028101906106d19190611148565b50600190565b6106e85760009450505050506106fc565b90910390600101610664565b506001925050505b949350505050565b600061070e61092d565b8382811461072f5760405163251f56a160e21b815260040160405180910390fd5b3460005b828110156106f457600086868381811061074f5761074f611132565b905060200201359050828111156107795760405163044044a560e21b815260040160405180910390fd5b6107a689898481811061078e5761078e611132565b90506020028101906107a09190611148565b82610978565b6107b75760009450505050506106fc565b90910390600101610733565b60006107cd61092d565b60015b90505b919050565b60006107e261092d565b6107d08234610978565b60007f000000000000000000000000000000000000000000000000000000000000000082602001511461082157506000919050565b60608201516001600160401b03161580159061084957504282606001516001600160401b0316105b1561086757604051631ab7da6b60e01b815260040160405180910390fd5b60808201516001600160401b031615610893576040516341bc07ff60e11b815260040160405180910390fd5b506001919050565b606060006108a88361099d565b60010190506000816001600160401b038111156108c7576108c7610a76565b6040519080825280601f01601f1916602001820160405280156108f1576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846108fb57509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461097657604051634ca8886760e01b815260040160405180910390fd5b565b60003061098c610100850160e08601611169565b6001600160a01b0316149392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106109dc5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610a08576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610a2657662386f26fc10000830492506010015b6305f5e1008310610a3e576305f5e100830492506008015b6127108310610a5257612710830492506004015b60648310610a64576064830492506002015b600a8310610a70576001015b92915050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b0381118282101715610aaf57610aaf610a76565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610add57610add610a76565b604052919050565b80356001600160401b03811681146107d357600080fd5b80356001600160a01b03811681146107d357600080fd5b803580151581146107d357600080fd5b60006001600160401b03821115610b3c57610b3c610a76565b50601f01601f191660200190565b600082601f830112610b5b57600080fd5b8135610b6e610b6982610b23565b610ab5565b818152846020838601011115610b8357600080fd5b816020850160208301376000918101602001919091529392505050565b60006101408284031215610bb357600080fd5b610bbb610a8c565b82358152602080840135908201529050610bd760408301610ae5565b6040820152610be860608301610ae5565b6060820152610bf960808301610ae5565b608082015260a08281013590820152610c1460c08301610afc565b60c0820152610c2560e08301610afc565b60e0820152610c376101008301610b13565b6101008201526101208201356001600160401b03811115610c5757600080fd5b610c6384828501610b4a565b6101208301525092915050565b600080600060608486031215610c8557600080fd5b83356001600160401b03811115610c9b57600080fd5b610ca786828701610ba0565b93505060208401356001600160401b03811115610cc357600080fd5b610ccf86828701610b4a565b93969395505050506040919091013590565b60005b83811015610cfc578181015183820152602001610ce4565b50506000910152565b60008151808452610d1d816020860160208601610ce1565b601f01601f19169290920160200192915050565b6020815260006104646020830184610d05565b60008060408385031215610d5757600080fd5b82356001600160401b03811115610d6d57600080fd5b830160208186031215610d7f57600080fd5b946020939093013593505050565b60008060408385031215610da057600080fd5b82356001600160401b03811115610db657600080fd5b610dc285828601610ba0565b92505060208301356001600160401b03811115610dde57600080fd5b610dea85828601610b4a565b9150509250929050565b60008083601f840112610e0657600080fd5b5081356001600160401b03811115610e1d57600080fd5b6020830191508360208260051b8501011115610e3857600080fd5b9250929050565b60008060008060408587031215610e5557600080fd5b84356001600160401b03811115610e6b57600080fd5b610e7787828801610df4565b90955093505060208501356001600160401b03811115610e9657600080fd5b610ea287828801610df4565b95989497509550505050565b600060208284031215610ec057600080fd5b81356001600160401b03811115610ed657600080fd5b8201610140818503121561046457600080fd5b600060208284031215610efb57600080fd5b604051602081016001600160401b0381118282101715610f1d57610f1d610a76565b806040525080915082516001600160401b03811115610f3b57600080fd5b8301601f81018513610f4c57600080fd5b8051610f5a610b6982610b23565b818152866020838501011115610f6f57600080fd5b610f80826020830160208601610ce1565b90925250909392505050565b600060208284031215610f9e57600080fd5b81516001600160401b03811115610fb457600080fd5b6106fc84828501610ee9565b6020815260008235601e19843603018112610fda57600080fd5b83016020810190356001600160401b03811115610ff657600080fd5b80360382131561100557600080fd5b602080850152806040850152808260608601376000606082860101526060601f19601f8301168501019250505092915050565b60208152815160208201526000602083015160408084015260018060a01b0381511660608401526001600160401b0360208201511660808401526040810151151560a0840152606081015160c0840152608081015160c060e08501526110a2610120850182610d05565b905060a0820151610100850152809250505092915050565b6000602082840312156110cc57600080fd5b5051919050565b600084516110e5818460208901610ce1565b601760f91b9083019081528451611103816001840160208901610ce1565b601760f91b600192909101918201528351611125816002840160208801610ce1565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e1983360301811261115f57600080fd5b9190910192915050565b60006020828403121561117b57600080fd5b61046482610afc56fea2646970667358221220f82b0516578e7e0761a8c1227e7d24e4c5d7d8aa00cb386e3c763009e8a5ce3a64736f6c634300081a0033",
        "sourceMap": "294:1893:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:12:5;;-1:-1:-1;;;1178:12:5;;;;;;;;;;;294:1893:39;;;;1361:606;;;;;;;;;;-1:-1:-1;1361:606:39;;;;;:::i;:::-;;:::i;:::-;;;3874:14:42;;3867:22;3849:41;;3837:2;3822:18;1361:606:39;;;;;;;;646:41;;;;;;;;;;;;682:5;646:41;;527:54;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;527:54:39;;;;;;;;;;;;:::i;1973:103::-;;;;;;;;;;-1:-1:-1;2059:10:39;;;;;;;;;;;;-1:-1:-1;;;2059:10:39;;;;1973:103;;373:47:37;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4844:32:42;;;4826:51;;4814:2;4799:18;373:47:37;4657:226:42;830:525:39;;;;;;;;;;-1:-1:-1;830:525:39;;;;;:::i;:::-;;:::i;:::-;;;5546:25:42;;;5534:2;5519:18;830:525:39;5400:177:42;890:234:3;;;;;;;;;;;;;:::i;172:43:36:-;;;;;;;;;;;;;;;660:173;;;;;;;;;;-1:-1:-1;660:173:36;;;;;:::i;:::-;809:17;;;;;;;790:14;;;;;780:25;;;;;:46;;660:173;426:25:37;;;;;;;;;;;;;;;3128:1460:5;;;;;;:::i;:::-;;:::i;1437:1461::-;;;;;;:::i;:::-;;:::i;976:85::-;;;;;;;;;;-1:-1:-1;1026:4:5;976:85;;2940:146;;;;;;:::i;:::-;;:::i;1249:::-;;;;;;:::i;:::-;;:::i;2082:103:39:-;;;;;;;;;;-1:-1:-1;2168:10:39;;;;;;;;;;;;-1:-1:-1;;;2168:10:39;;;;2082:103;;587:53;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;587:53:39;;;;;1361:606;1542:4;1563:26;1579:9;1563:15;:26::i;:::-;1558:45;;-1:-1:-1;1598:5:39;1591:12;;1558:45;1701:16;;;;:30;;;;:66;;;1755:12;1735:9;:16;;;:32;;1701:66;1697:84;;;-1:-1:-1;1776:5:39;1769:12;;1697:84;1792:27;1833:9;:14;;;1822:43;;;;;;;;;;;;:::i;:::-;1792:73;;1875:28;1917:6;1906:32;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1956:4:39;;-1:-1:-1;;;1361:606:39;;;;;;:::o;830:525::-;914:7;940:3;-1:-1:-1;;;;;940:10:39;;964:374;;;;;;;;1009:18;964:374;;;;1051:272;;;;;;;;1107:10;-1:-1:-1;;;;;1051:272:39;;;;;1155:1;-1:-1:-1;;;;;1051:272:39;;;;;1189:5;1051:272;;;;;;1224:6;1051:272;;;;1269:4;1258:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;1051:272;;;;1303:1;1051:272;;;964:374;;;940:408;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;890:234:3:-;932:13;1017:24;1034:6;1017:16;:24::i;:::-;1048;1065:6;1048:16;:24::i;:::-;1079:23;1096:5;1079:16;:23::i;:::-;1000:103;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;957:160;;890:234;:::o;3128:1460:5:-;3269:4;905:10;:8;:10::i;:::-;3302:12;3335:23;;::::1;3331:76;;3381:15;;-1:-1:-1::0;;;3381:15:5::1;;;;;;;;;;;3331:76;3839:9;3814:22;3859:701;3883:6;3879:1;:10;3859:701;;;4016:13;4032:6;;4039:1;4032:9;;;;;;;:::i;:::-;;;;;;;4016:25;;4067:14;4059:5;:22;4055:87;;;4108:19;;-1:-1:-1::0;;;4108:19:5::1;;;;;;;;;;;4055:87;4270:32;4279:12;;4292:1;4279:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1081:4:37;;964:128;4270:32:5::1;4265:84;;4329:5;4322:12;;;;;;;;4265:84;4512:23:::0;;::::1;::::0;1489:1:0;1485:5;3859:701:5::1;;;;4577:4;4570:11;;;;926:1;3128:1460:::0;;;;;;:::o;1437:1461::-;1578:4;905:10;:8;:10::i;:::-;1611:12;1644:23;;::::1;1640:76;;1690:15;;-1:-1:-1::0;;;1690:15:5::1;;;;;;;;;;;1640:76;2148:9;2123:22;2168:702;2192:6;2188:1;:10;2168:702;;;2325:13;2341:6;;2348:1;2341:9;;;;;;;:::i;:::-;;;;;;;2325:25;;2376:14;2368:5;:22;2364:87;;;2417:19;;-1:-1:-1::0;;;2417:19:5::1;;;;;;;;;;;2364:87;2580:32;2589:12;;2602:1;2589:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2606:5;2580:8;:32::i;:::-;2575:84;;2639:5;2632:12;;;;;;;;2575:84;2822:23:::0;;::::1;::::0;1489:1:0;1485:5;2168:702:5::1;;2940:146:::0;3024:4;905:10;:8;:10::i;:::-;1081:4:37;3047:32:5::1;3040:39;;926:1;2940:146:::0;;;:::o;1249:::-;1333:4;905:10;:8;:10::i;:::-;1356:32:::1;1365:11;1378:9;1356:8;:32::i;222:432:36:-:0;300:4;364:18;344:9;:16;;;:38;340:56;;-1:-1:-1;391:5:36;;222:432;-1:-1:-1;222:432:36:o;340:56::-;435:24;;;;-1:-1:-1;;;;;435:29:36;;;;;:75;;;495:15;468:9;:24;;;-1:-1:-1;;;;;468:42:36;;435:75;431:105;;;519:17;;-1:-1:-1;;;519:17:36;;;;;;;;;;;431:105;575:24;;;;-1:-1:-1;;;;;575:29:36;;571:54;;613:12;;-1:-1:-1;;;613:12:36;;;;;;;;;;;571:54;-1:-1:-1;643:4:36;;222:432;-1:-1:-1;222:432:36:o;637:698:31:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;-1:-1:-1;;;;;817:18:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:31;-1:-1:-1;794:41:31;-1:-1:-1;955:28:31;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:31;-1:-1:-1;;;1175:2:31;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:31;1010:282;1256:21;-1:-1:-1;1312:6:31;637:698;-1:-1:-1;;;637:698:31:o;6035:128:5:-;6082:10;-1:-1:-1;;;;;6104:4:5;6082:27;;6078:79;;6132:14;;-1:-1:-1;;;6132:14:5;;;;;;;;;;;6078:79;6035:128::o;739:219:37:-;845:4;946;914:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;914:37:37;;;739:219;-1:-1:-1;;;739:219:37:o;12214:916:32:-;12267:7;;-1:-1:-1;;;12342:17:32;;12338:103;;-1:-1:-1;;;12379:17:32;;;-1:-1:-1;12424:2:32;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:32;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:32;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:32;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:32;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:32;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13025:66;13117:6;12214:916;-1:-1:-1;;12214:916:32:o;14:127:42:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:255;218:2;212:9;260:6;248:19;;-1:-1:-1;;;;;282:34:42;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:2;373:22;146:255;:::o;406:275::-;477:2;471:9;542:2;523:13;;-1:-1:-1;;519:27:42;507:40;;-1:-1:-1;;;;;562:34:42;;598:22;;;559:62;556:88;;;624:18;;:::i;:::-;660:2;653:22;406:275;;-1:-1:-1;406:275:42:o;686:171::-;753:20;;-1:-1:-1;;;;;802:30:42;;792:41;;782:69;;847:1;844;837:12;862:173;930:20;;-1:-1:-1;;;;;979:31:42;;969:42;;959:70;;1025:1;1022;1015:12;1040:160;1105:20;;1161:13;;1154:21;1144:32;;1134:60;;1190:1;1187;1180:12;1205:186;1253:4;-1:-1:-1;;;;;1278:6:42;1275:30;1272:56;;;1308:18;;:::i;:::-;-1:-1:-1;1374:2:42;1353:15;-1:-1:-1;;1349:29:42;1380:4;1345:40;;1205:186::o;1396:486::-;1438:5;1491:3;1484:4;1476:6;1472:17;1468:27;1458:55;;1509:1;1506;1499:12;1458:55;1549:6;1536:20;1580:52;1596:35;1624:6;1596:35;:::i;:::-;1580:52;:::i;:::-;1657:6;1648:7;1641:23;1711:3;1704:4;1695:6;1687;1683:19;1679:30;1676:39;1673:59;;;1728:1;1725;1718:12;1673:59;1793:6;1786:4;1778:6;1774:17;1767:4;1758:7;1754:18;1741:59;1849:1;1820:20;;;1842:4;1816:31;1809:42;;;;1824:7;1396:486;-1:-1:-1;;;1396:486:42:o;1887:1133::-;1945:5;1993:6;1981:9;1976:3;1972:19;1968:32;1965:52;;;2013:1;2010;2003:12;1965:52;2035:22;;:::i;:::-;2102:23;;2134:22;;2229:2;2214:18;;;2201:32;2249:14;;;2242:31;2026;-1:-1:-1;2305:37:42;2338:2;2323:18;;2305:37;:::i;:::-;2300:2;2293:5;2289:14;2282:61;2375:37;2408:2;2397:9;2393:18;2375:37;:::i;:::-;2370:2;2363:5;2359:14;2352:61;2446:38;2479:3;2468:9;2464:19;2446:38;:::i;:::-;2440:3;2429:15;;2422:63;2558:3;2543:19;;;2530:33;2579:15;;;2572:32;2637:39;2671:3;2656:19;;2637:39;:::i;:::-;2631:3;2624:5;2620:15;2613:64;2710:39;2744:3;2733:9;2729:19;2710:39;:::i;:::-;2704:3;2697:5;2693:15;2686:64;2783:36;2814:3;2803:9;2799:19;2783:36;:::i;:::-;2777:3;2770:5;2766:15;2759:61;2871:3;2860:9;2856:19;2843:33;-1:-1:-1;;;;;2891:6:42;2888:30;2885:50;;;2931:1;2928;2921:12;2885:50;2968:45;3009:3;3000:6;2989:9;2985:22;2968:45;:::i;:::-;2962:3;2955:5;2951:15;2944:70;;1887:1133;;;;:::o;3025:679::-;3138:6;3146;3154;3207:2;3195:9;3186:7;3182:23;3178:32;3175:52;;;3223:1;3220;3213:12;3175:52;3263:9;3250:23;-1:-1:-1;;;;;3288:6:42;3285:30;3282:50;;;3328:1;3325;3318:12;3282:50;3351:62;3405:7;3396:6;3385:9;3381:22;3351:62;:::i;:::-;3341:72;;;3466:2;3455:9;3451:18;3438:32;-1:-1:-1;;;;;3485:8:42;3482:32;3479:52;;;3527:1;3524;3517:12;3479:52;3550:51;3593:7;3582:8;3571:9;3567:24;3550:51;:::i;:::-;3025:679;;3540:61;;-1:-1:-1;;;;3670:2:42;3655:18;;;;3642:32;;3025:679::o;3901:250::-;3986:1;3996:113;4010:6;4007:1;4004:13;3996:113;;;4086:11;;;4080:18;4067:11;;;4060:39;4032:2;4025:10;3996:113;;;-1:-1:-1;;4143:1:42;4125:16;;4118:27;3901:250::o;4156:271::-;4198:3;4236:5;4230:12;4263:6;4258:3;4251:19;4279:76;4348:6;4341:4;4336:3;4332:14;4325:4;4318:5;4314:16;4279:76;:::i;:::-;4409:2;4388:15;-1:-1:-1;;4384:29:42;4375:39;;;;4416:4;4371:50;;4156:271;-1:-1:-1;;4156:271:42:o;4432:220::-;4581:2;4570:9;4563:21;4544:4;4601:45;4642:2;4631:9;4627:18;4619:6;4601:45;:::i;4888:507::-;4990:6;4998;5051:2;5039:9;5030:7;5026:23;5022:32;5019:52;;;5067:1;5064;5057:12;5019:52;5107:9;5094:23;-1:-1:-1;;;;;5132:6:42;5129:30;5126:50;;;5172:1;5169;5162:12;5126:50;5195:22;;5251:2;5233:16;;;5229:25;5226:45;;;5267:1;5264;5257:12;5226:45;5290:2;5361;5346:18;;;;5333:32;;-1:-1:-1;;;4888:507:42:o;5582:565::-;5686:6;5694;5747:2;5735:9;5726:7;5722:23;5718:32;5715:52;;;5763:1;5760;5753:12;5715:52;5803:9;5790:23;-1:-1:-1;;;;;5828:6:42;5825:30;5822:50;;;5868:1;5865;5858:12;5822:50;5891:62;5945:7;5936:6;5925:9;5921:22;5891:62;:::i;:::-;5881:72;;;6006:2;5995:9;5991:18;5978:32;-1:-1:-1;;;;;6025:8:42;6022:32;6019:52;;;6067:1;6064;6057:12;6019:52;6090:51;6133:7;6122:8;6111:9;6107:24;6090:51;:::i;:::-;6080:61;;;5582:565;;;;;:::o;6372:387::-;6455:8;6465:6;6519:3;6512:4;6504:6;6500:17;6496:27;6486:55;;6537:1;6534;6527:12;6486:55;-1:-1:-1;6560:20:42;;-1:-1:-1;;;;;6592:30:42;;6589:50;;;6635:1;6632;6625:12;6589:50;6672:4;6664:6;6660:17;6648:29;;6732:3;6725:4;6715:6;6712:1;6708:14;6700:6;6696:27;6692:38;6689:47;6686:67;;;6749:1;6746;6739:12;6686:67;6372:387;;;;;:::o;6764:837::-;6915:6;6923;6931;6939;6992:2;6980:9;6971:7;6967:23;6963:32;6960:52;;;7008:1;7005;6998:12;6960:52;7048:9;7035:23;-1:-1:-1;;;;;7073:6:42;7070:30;7067:50;;;7113:1;7110;7103:12;7067:50;7152:90;7234:7;7225:6;7214:9;7210:22;7152:90;:::i;:::-;7261:8;;-1:-1:-1;7126:116:42;-1:-1:-1;;7349:2:42;7334:18;;7321:32;-1:-1:-1;;;;;7365:32:42;;7362:52;;;7410:1;7407;7400:12;7362:52;7449:92;7533:7;7522:8;7511:9;7507:24;7449:92;:::i;:::-;6764:837;;;;-1:-1:-1;7560:8:42;-1:-1:-1;;;;6764:837:42:o;7606:389::-;7694:6;7747:2;7735:9;7726:7;7722:23;7718:32;7715:52;;;7763:1;7760;7753:12;7715:52;7803:9;7790:23;-1:-1:-1;;;;;7828:6:42;7825:30;7822:50;;;7868:1;7865;7858:12;7822:50;7891:22;;7947:3;7929:16;;;7925:26;7922:46;;;7964:1;7961;7954:12;8000:906;8071:5;8119:4;8107:9;8102:3;8098:19;8094:30;8091:50;;;8137:1;8134;8127:12;8091:50;8190:2;8184:9;8232:4;8220:17;;-1:-1:-1;;;;;8252:34:42;;8288:22;;;8249:62;8246:88;;;8314:18;;:::i;:::-;8354:10;8350:2;8343:22;;8383:6;8374:15;;8418:9;8412:16;-1:-1:-1;;;;;8443:6:42;8440:30;8437:50;;;8483:1;8480;8473:12;8437:50;8506:22;;8559:2;8551:11;;8547:21;-1:-1:-1;8537:49:42;;8582:1;8579;8572:12;8537:49;8615:2;8609:9;8640:52;8656:35;8684:6;8656:35;:::i;8640:52::-;8715:6;8708:5;8701:21;8765:3;8758:4;8749:6;8745:2;8741:15;8737:26;8734:35;8731:55;;;8782:1;8779;8772:12;8731:55;8795:75;8863:6;8856:4;8849:5;8845:16;8838:4;8834:2;8830:13;8795:75;:::i;:::-;8879:21;;;-1:-1:-1;8000:906:42;;;-1:-1:-1;;;8000:906:42:o;8911:373::-;9013:6;9066:2;9054:9;9045:7;9041:23;9037:32;9034:52;;;9082:1;9079;9072:12;9034:52;9115:9;9109:16;-1:-1:-1;;;;;9140:6:42;9137:30;9134:50;;;9180:1;9177;9170:12;9134:50;9203:75;9270:7;9261:6;9250:9;9246:22;9203:75;:::i;9664:886::-;9859:2;9848:9;9841:21;9822:4;9910:6;9897:20;9997:2;9993:7;9984:6;9968:14;9964:27;9960:41;9940:18;9936:66;9926:94;;10016:1;10013;10006:12;9926:94;10042:31;;10150:2;10139:14;;;10096:19;-1:-1:-1;;;;;10165:30:42;;10162:50;;;10208:1;10205;10198:12;10162:50;10257:6;10241:14;10237:27;10228:7;10224:41;10221:61;;;10278:1;10275;10268:12;10221:61;10318:2;10313;10302:9;10298:18;10291:30;10357:6;10352:2;10341:9;10337:18;10330:34;10415:6;10406:7;10401:2;10390:9;10386:18;10373:49;10471:1;10466:2;10457:6;10446:9;10442:22;10438:31;10431:42;10541:2;10534;10530:7;10525:2;10517:6;10513:15;10509:29;10498:9;10494:45;10490:54;10482:62;;;;9664:886;;;;:::o;10555:943::-;10752:2;10741:9;10734:21;10797:6;10791:13;10786:2;10775:9;10771:18;10764:41;10715:4;10852:2;10844:6;10840:15;10834:22;10894:4;10887;10876:9;10872:20;10865:34;10977:1;10973;10968:3;10964:11;10960:19;10945:12;10939:19;10935:45;10930:2;10919:9;10915:18;10908:73;-1:-1:-1;;;;;11046:2:42;11032:12;11028:21;11022:28;11018:53;11012:3;11001:9;10997:19;10990:82;11147:4;11133:12;11129:23;11123:30;11116:38;11109:46;11103:3;11092:9;11088:19;11081:75;11218:2;11204:12;11200:21;11194:28;11187:4;11176:9;11172:20;11165:58;11278:3;11264:12;11260:22;11254:29;11320:4;11314:3;11303:9;11299:19;11292:33;11348:54;11397:3;11386:9;11382:19;11366:14;11348:54;:::i;:::-;11334:68;;11463:3;11449:12;11445:22;11439:29;11433:3;11422:9;11418:19;11411:58;11486:6;11478:14;;;;10555:943;;;;:::o;11503:184::-;11573:6;11626:2;11614:9;11605:7;11601:23;11597:32;11594:52;;;11642:1;11639;11632:12;11594:52;-1:-1:-1;11665:16:42;;11503:184;-1:-1:-1;11503:184:42:o;11692:987::-;12121:3;12159:6;12153:13;12175:66;12234:6;12229:3;12222:4;12214:6;12210:17;12175:66;:::i;:::-;-1:-1:-1;;;12263:16:42;;;12288:18;;;12331:13;;12353:78;12331:13;12418:1;12407:13;;12400:4;12388:17;;12353:78;:::i;:::-;-1:-1:-1;;;12494:1:42;12450:20;;;;12486:10;;;12479:23;12527:13;;12549:75;12527:13;12611:1;12603:10;;12596:4;12584:17;;12549:75;:::i;:::-;12648:17;12640:33;;;;-1:-1:-1;;;;;11692:987:42:o;12684:127::-;12745:10;12740:3;12736:20;12733:1;12726:31;12776:4;12773:1;12766:15;12800:4;12797:1;12790:15;12816:327;12911:4;12969:11;12956:25;13063:3;13059:8;13048;13032:14;13028:29;13024:44;13004:18;13000:69;12990:97;;13083:1;13080;13073:12;12990:97;13104:33;;;;;12816:327;-1:-1:-1;;12816:327:42:o;13280:186::-;13339:6;13392:2;13380:9;13371:7;13367:23;13363:32;13360:52;;;13408:1;13405;13398:12;13360:52;13431:29;13450:9;13431:29;:::i",
        "linkReferences": {},
        "immutableReferences": {
            "41446": [
                {
                    "start": 658,
                    "length": 32
                },
                {
                    "start": 1193,
                    "length": 32
                },
                {
                    "start": 2032,
                    "length": 32
                }
            ],
            "41551": [
                {
                    "start": 515,
                    "length": 32
                }
            ],
            "41554": [
                {
                    "start": 761,
                    "length": 32
                },
                {
                    "start": 1135,
                    "length": 32
                }
            ],
            "424": [
                {
                    "start": 1433,
                    "length": 32
                }
            ],
            "426": [
                {
                    "start": 1474,
                    "length": 32
                }
            ],
            "428": [
                {
                    "start": 1515,
                    "length": 32
                }
            ],
            "562": [
                {
                    "start": 2360,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "ATTESTATION_SCHEMA()": "5bf2f20d",
        "DEMAND_ABI()": "fdc5b3f4",
        "IS_REVOCABLE()": "13da12b3",
        "SCHEMA_ABI()": "2083d47f",
        "_checkIdentical((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes)": "7a9f479e",
        "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
        "checkStatement((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": "1272ff8b",
        "eas()": "8150864d",
        "getDemandAbi()": "f0bebf03",
        "getSchemaAbi()": "344bd2d9",
        "isPayable()": "ce46e046",
        "makeStatement((string),bytes32)": "455577cc",
        "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
        "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
        "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
        "schemaRegistry()": "4441bbd9",
        "version()": "54fd4d50"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDemand\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidResultAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEMAND_ABI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_REVOCABLE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SCHEMA_ABI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"statement\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"}],\"name\":\"_checkIdentical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"statement\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"counteroffer\",\"type\":\"bytes32\"}],\"name\":\"checkStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eas\",\"outputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDemandAbi\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchemaAbi\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"resultCID\",\"type\":\"string\"}],\"internalType\":\"struct DockerResultStatement.StatementData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"makeStatement\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaRegistry\",\"outputs\":[{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/statements/DockerResultStatement.sol\":\"DockerResultStatement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1\",\"dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd\",\"dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x0c0533594956d3a7d861a68127825cbde3bc9a89979ece3aa99c3820f4c5a251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://487e5c67f3d347f6f99b0857155aebbb015f63666ab46c57dffc72a7c6f5c06f\",\"dweb:/ipfs/QmeTmXPtumpWVxGY2NXQG3Fma73vh3Bjb6diuUHK52mpPD\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x514445ef64f135740d0cb0beeff835b874c612bdc44132af987101d1c3e969ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d9b1539c632c3282747c4e123c410ad8d544082e9c723429515247c7c88aa162\",\"dweb:/ipfs/QmceojxFNsJ2QUiMUyjxtUHr7DZWkztYdqweKQ1vbZAPEF\"]},\"src/IStatement.sol\":{\"keccak256\":\"0x3bacdc919fe58af2a032f453bde414c72d7347d703de87ac5c192b664ce40344\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ca4ecb8e14c0cb2002ebafb0129360f4ecdf0b564b8656328006300301b77dd\",\"dweb:/ipfs/QmVZ3w96pwBwtHoaMQCZdQwFfitaxBj29A9DXfd8NoT7Wg\"]},\"src/statements/DockerResultStatement.sol\":{\"keccak256\":\"0xce1a0448594cb4622f47d1c1c562e93ee77307b05258fc58c0453f64c3fdb3e4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://78c236e1a3cd0351f0e4b571318e9e41cb6f1e1913ab8ad82f663b5cae33c51f\",\"dweb:/ipfs/QmQwXK9haryouYCiQVmtv9iNriYM3R7UxKxTdncGZ8mU4Y\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IEAS",
                            "name": "_eas",
                            "type": "address"
                        },
                        {
                            "internalType": "contract ISchemaRegistry",
                            "name": "_schemaRegistry",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccessDenied"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DeadlineExpired"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidDemand"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidEAS"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidLength"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidResultAttestation"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPayable"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ATTESTATION_SCHEMA",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DEMAND_ABI",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "IS_REVOCABLE",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "SCHEMA_ABI",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "statement",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "demand",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "_checkIdentical",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "attest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "statement",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "demand",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "counteroffer",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "checkStatement",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "eas",
                    "outputs": [
                        {
                            "internalType": "contract IEAS",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getDemandAbi",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getSchemaAbi",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "isPayable",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct DockerResultStatement.StatementData",
                            "name": "data",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "string",
                                    "name": "resultCID",
                                    "type": "string"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes32",
                            "name": "refUID",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "makeStatement",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiAttest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiRevoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "revoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "schemaRegistry",
                    "outputs": [
                        {
                            "internalType": "contract ISchemaRegistry",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "receive"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The new attestation."
                        },
                        "returns": {
                            "_0": "Whether the attestation is valid."
                        }
                    },
                    "isPayable()": {
                        "returns": {
                            "_0": "Whether the resolver supports ETH transfers."
                        }
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The new attestations.",
                            "values": "Explicit ETH amounts which were sent with each attestation."
                        },
                        "returns": {
                            "_0": "Whether all the attestations are valid."
                        }
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The existing attestations to be revoked.",
                            "values": "Explicit ETH amounts which were sent with each revocation."
                        },
                        "returns": {
                            "_0": "Whether the attestations can be revoked."
                        }
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The existing attestation to be revoked."
                        },
                        "returns": {
                            "_0": "Whether the attestation can be revoked."
                        }
                    },
                    "version()": {
                        "returns": {
                            "_0": "Semver contract version as a string."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation and verifies whether it's valid."
                    },
                    "isPayable()": {
                        "notice": "Checks if the resolver can be sent ETH."
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes multiple attestations and verifies whether they are valid."
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation revocation and verifies if it can be revoked."
                    },
                    "version()": {
                        "notice": "Returns the full semver contract version."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eas/=lib/eas-contracts/contracts/",
                "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "eas-contracts/=lib/eas-contracts/contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/statements/DockerResultStatement.sol": "DockerResultStatement"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/eas-contracts/contracts/Common.sol": {
                "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
                "urls": [
                    "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
                    "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/IEAS.sol": {
                "keccak256": "0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036",
                "urls": [
                    "bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1",
                    "dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
                "keccak256": "0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4",
                "urls": [
                    "bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517",
                    "dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/Semver.sol": {
                "keccak256": "0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8",
                "urls": [
                    "bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd",
                    "dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
                "keccak256": "0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395",
                "urls": [
                    "bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d",
                    "dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
                "keccak256": "0x0c0533594956d3a7d861a68127825cbde3bc9a89979ece3aa99c3820f4c5a251",
                "urls": [
                    "bzz-raw://487e5c67f3d347f6f99b0857155aebbb015f63666ab46c57dffc72a7c6f5c06f",
                    "dweb:/ipfs/QmeTmXPtumpWVxGY2NXQG3Fma73vh3Bjb6diuUHK52mpPD"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
                "urls": [
                    "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
                    "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
                "urls": [
                    "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
                    "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
                "urls": [
                    "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
                    "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
                ],
                "license": "MIT"
            },
            "src/IArbiter.sol": {
                "keccak256": "0x514445ef64f135740d0cb0beeff835b874c612bdc44132af987101d1c3e969ab",
                "urls": [
                    "bzz-raw://d9b1539c632c3282747c4e123c410ad8d544082e9c723429515247c7c88aa162",
                    "dweb:/ipfs/QmceojxFNsJ2QUiMUyjxtUHr7DZWkztYdqweKQ1vbZAPEF"
                ],
                "license": "UNLICENSED"
            },
            "src/IStatement.sol": {
                "keccak256": "0x3bacdc919fe58af2a032f453bde414c72d7347d703de87ac5c192b664ce40344",
                "urls": [
                    "bzz-raw://8ca4ecb8e14c0cb2002ebafb0129360f4ecdf0b564b8656328006300301b77dd",
                    "dweb:/ipfs/QmVZ3w96pwBwtHoaMQCZdQwFfitaxBj29A9DXfd8NoT7Wg"
                ],
                "license": "UNLICENSED"
            },
            "src/statements/DockerResultStatement.sol": {
                "keccak256": "0xce1a0448594cb4622f47d1c1c562e93ee77307b05258fc58c0453f64c3fdb3e4",
                "urls": [
                    "bzz-raw://78c236e1a3cd0351f0e4b571318e9e41cb6f1e1913ab8ad82f663b5cae33c51f",
                    "dweb:/ipfs/QmQwXK9haryouYCiQVmtv9iNriYM3R7UxKxTdncGZ8mU4Y"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 39
}
