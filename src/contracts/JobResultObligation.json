{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_eas",
                    "type": "address",
                    "internalType": "contract IEAS"
                },
                {
                    "name": "_schemaRegistry",
                    "type": "address",
                    "internalType": "contract ISchemaRegistry"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "receive",
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "ATTESTATION_SCHEMA",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "attest",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "getSchema",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct SchemaRecord",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "resolver",
                            "type": "address",
                            "internalType": "contract ISchemaResolver"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "schema",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getStatement",
            "inputs": [
                {
                    "name": "uid",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "isPayable",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "makeStatement",
            "inputs": [
                {
                    "name": "data",
                    "type": "tuple",
                    "internalType": "struct JobResultObligation.StatementData",
                    "components": [
                        {
                            "name": "result",
                            "type": "string",
                            "internalType": "string"
                        }
                    ]
                },
                {
                    "name": "refUID",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "multiAttest",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "multiRevoke",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "revoke",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "error",
            "name": "AccessDenied",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidEAS",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidLength",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotFromStatement",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPayable",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "255:864:14:-:0;;;364:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;549:301:12;;;;;;;;;;;;-1:-1:-1;;;549:301:12;;;;496:4:14;759:14:4;;;;688:1:6;783:14:4;;-1:-1:-1;807:14:4;;456:4:14;;462:15;;456:4;-1:-1:-1;;;;;708:26:6;::::1;704:76;;757:12;;-1:-1:-1::0;;;757:12:6::1;;;;;;;;;;;704:76;-1:-1:-1::0;;;;;790:10:6;;::::1;;::::0;712::12;;::::1;;::::0;732:32;::::1;;::::0;;;795:48:::1;::::0;-1:-1:-1;;;795:48:12;;:23:::1;::::0;:48:::1;::::0;819:6;;827:4:::1;::::0;833:9;;795:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;774:69;::::0;-1:-1:-1;255:864:14;;-1:-1:-1;;;;;255:864:14;14:137:15;-1:-1:-1;;;;;95:31:15;;85:42;;75:70;;141:1;138;131:12;75:70;14:137;:::o;156:432::-;270:6;278;331:2;319:9;310:7;306:23;302:32;299:52;;;347:1;344;337:12;299:52;379:9;373:16;398:37;429:5;398:37;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:39:15;483:25;517:39;:::i;:::-;575:7;565:17;;;156:432;;;;;:::o;593:736::-;814:2;803:9;796:21;777:4;846:6;840:13;889:6;884:2;873:9;869:18;862:34;914:1;924:145;938:6;935:1;932:13;924:145;;;1052:4;1036:14;;;1032:25;;1026:32;1020:3;1001:17;;;997:27;990:69;953:12;924:145;;;-1:-1:-1;1119:1:15;1113:3;1089:22;;;1085:32;;1078:43;;;;-1:-1:-1;;;;;1231:32:15;;;;1224:4;1209:20;;1202:62;1307:14;;1300:22;1295:2;1280:18;;1273:50;-1:-1:-1;1182:2:15;1161:15;;;-1:-1:-1;;1157:29:15;1142:45;1138:55;;;-1:-1:-1;593:736:15:o;1334:184::-;1404:6;1457:2;1445:9;1436:7;1432:23;1428:32;1425:52;;;1473:1;1470;1463:12;1425:52;-1:-1:-1;1496:16:15;;1334:184;-1:-1:-1;1334:184:15:o;:::-;255:864:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "255:864:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1183:12:6;;-1:-1:-1;;;1183:12:6;;;;;;;;;;;255:864:14;;;;510:607;;;;;;;;;;-1:-1:-1;510:607:14;;;;;:::i;:::-;;:::i;:::-;;;671:25:15;;;659:2;644:18;510:607:14;;;;;;;;945:235:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;468:43:12:-;;;;;;;;;;;;;;;1257:274;;;;;;;;;;-1:-1:-1;1257:274:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1537:133::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3133:1460:6:-;;;;;;:::i;:::-;;:::i;:::-;;;5213:14:15;;5206:22;5188:41;;5176:2;5161:18;3133:1460:6;5048:187:15;1442:1461:6;;;;;;:::i;:::-;;:::i;981:85::-;;;;;;;;;;-1:-1:-1;1031:4:6;981:85;;2945:146;;;;;;:::i;:::-;;:::i;1254:::-;;;;;;:::i;:::-;;:::i;510:607:14:-;616:7;654:3;-1:-1:-1;;;;;654:10:14;;682:414;;;;;;;;731:18;682:414;;;;777:300;;;;;;;;837:10;-1:-1:-1;;;;;777:300:14;;;;;889:1;-1:-1:-1;;;;;777:300:14;;;;;927:5;777:300;;;;;;966:6;777:300;;;;1015:4;1004:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;777:300;;;;1053:1;777:300;;;682:414;;;654:456;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;635:475;510:607;-1:-1:-1;;;510:607:14:o;945:235:4:-;987:13;1072:24;1089:6;1072:16;:24::i;:::-;1103;1120:6;1103:16;:24::i;:::-;1134;1151:6;1134:16;:24::i;:::-;1055:104;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1012:161;;945:235;:::o;1257:274:12:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:23:12;;-1:-1:-1;;;1392:23:12;;;;;671:25:15;;;-1:-1:-1;;;;;;;;1392:3:12;:18;;;;644::15;;1392:23:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1392:23:12;;;;;;;;;;;;:::i;:::-;1359:56;;1451:18;1429:11;:18;;;:40;1425:71;;1478:18;;-1:-1:-1;;;1478:18:12;;;;;;;;;;;1425:71;1513:11;1257:274;-1:-1:-1;;1257:274:12:o;1537:133::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:44:12;;-1:-1:-1;;;1619:44:12;;1644:18;1619:44;;;671:25:15;-1:-1:-1;;;;;1619:14:12;:24;;;;644:18:15;;1619:44:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1619:44:12;;;;;;;;;;;;:::i;:::-;1612:51;;1537:133;:::o;3133:1460:6:-;3274:4;910:10;:8;:10::i;:::-;3307:12;3340:23;;::::1;3336:76;;3386:15;;-1:-1:-1::0;;;3386:15:6::1;;;;;;;;;;;3336:76;3844:9;3819:22;3864:701;3888:6;3884:1;:10;3864:701;;;4021:13;4037:6;;4044:1;4037:9;;;;;;;:::i;:::-;;;;;;;4021:25;;4072:14;4064:5;:22;4060:87;;;4113:19;;-1:-1:-1::0;;;4113:19:6::1;;;;;;;;;;;4060:87;4275:32;4284:12;;4297:1;4284:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1240:4:12;;1102:149;4275:32:6::1;4270:84;;4334:5;4327:12;;;;;;;;4270:84;4517:23:::0;;::::1;::::0;1489:1:0;1485:5;3864:701:6::1;;;;4582:4;4575:11;;;;931:1;3133:1460:::0;;;;;;:::o;1442:1461::-;1583:4;910:10;:8;:10::i;:::-;1616:12;1649:23;;::::1;1645:76;;1695:15;;-1:-1:-1::0;;;1695:15:6::1;;;;;;;;;;;1645:76;2153:9;2128:22;2173:702;2197:6;2193:1;:10;2173:702;;;2330:13;2346:6;;2353:1;2346:9;;;;;;;:::i;:::-;;;;;;;2330:25;;2381:14;2373:5;:22;2369:87;;;2422:19;;-1:-1:-1::0;;;2422:19:6::1;;;;;;;;;;;2369:87;2585:32;2594:12;;2607:1;2594:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2611:5;2585:8;:32::i;:::-;2580:84;;2644:5;2637:12;;;;;;;;2580:84;2827:23:::0;;::::1;::::0;1489:1:0;1485:5;2173:702:6::1;;2945:146:::0;3029:4;910:10;:8;:10::i;:::-;1240:4:12;3052:32:6::1;3045:39;;931:1;2945:146:::0;;;:::o;1254:::-;1338:4;910:10;:8;:10::i;:::-;1361:32:::1;1370:11;1383:9;1361:8;:32::i;637:632:8:-:0;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;-1:-1:-1;;;;;817:18:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:8;-1:-1:-1;794:41:8;-1:-1:-1;924:28:8;;;940:2;924:28;979:247;-1:-1:-1;;1010:5:8;-1:-1:-1;;;1109:2:8;1098:14;;1093:32;1010:5;1080:46;1170:2;1161:11;;;-1:-1:-1;1190:21:8;979:247;1190:21;979:247;-1:-1:-1;1246:6:8;637:632;-1:-1:-1;;;637:632:8:o;6040:128:6:-;6087:10;-1:-1:-1;;;;;6109:4:6;6087:27;;6083:79;;6137:14;;-1:-1:-1;;;6137:14:6;;;;;;;;;;;6083:79;6040:128::o;856:240:12:-;983:4;1084;1052:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1052:37:12;;;856:240;-1:-1:-1;;;856:240:12:o;25316:916:9:-;25369:7;;-1:-1:-1;;;25444:17:9;;25440:103;;-1:-1:-1;;;25481:17:9;;;-1:-1:-1;25526:2:9;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:9;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:9;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:9;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:9;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:9;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:9:o;14:506:15:-;115:6;123;176:2;164:9;155:7;151:23;147:32;144:52;;;192:1;189;182:12;144:52;232:9;219:23;-1:-1:-1;;;;;257:6:15;254:30;251:50;;;297:1;294;287:12;251:50;320:22;;376:2;358:16;;;354:25;351:45;;;392:1;389;382:12;351:45;415:2;486;471:18;;;;458:32;;-1:-1:-1;;;14:506:15:o;707:250::-;792:1;802:113;816:6;813:1;810:13;802:113;;;892:11;;;886:18;873:11;;;866:39;838:2;831:10;802:113;;;-1:-1:-1;;949:1:15;931:16;;924:27;707:250::o;962:271::-;1004:3;1042:5;1036:12;1069:6;1064:3;1057:19;1085:76;1154:6;1147:4;1142:3;1138:14;1131:4;1124:5;1120:16;1085:76;:::i;:::-;1215:2;1194:15;-1:-1:-1;;1190:29:15;1181:39;;;;1222:4;1177:50;;962:271;-1:-1:-1;;962:271:15:o;1238:220::-;1387:2;1376:9;1369:21;1350:4;1407:45;1448:2;1437:9;1433:18;1425:6;1407:45;:::i;1463:226::-;1522:6;1575:2;1563:9;1554:7;1550:23;1546:32;1543:52;;;1591:1;1588;1581:12;1543:52;-1:-1:-1;1636:23:15;;1463:226;-1:-1:-1;1463:226:15:o;2006:1229::-;2189:2;2178:9;2171:21;2234:6;2228:13;2223:2;2212:9;2208:18;2201:41;2296:2;2288:6;2284:15;2278:22;2273:2;2262:9;2258:18;2251:50;2152:4;2348:2;2340:6;2336:15;2330:22;2361:51;2408:2;2397:9;2393:18;2379:12;-1:-1:-1;;;;;1759:30:15;1747:43;;1694:102;2361:51;-1:-1:-1;2461:2:15;2449:15;;2443:22;-1:-1:-1;;;;;1759:30:15;;2523:3;2508:19;;1747:43;-1:-1:-1;2577:3:15;2565:16;;2559:23;-1:-1:-1;;;;;1759:30:15;;2640:3;2625:19;;1747:43;2591:54;2700:3;2692:6;2688:16;2682:23;2676:3;2665:9;2661:19;2654:52;2755:3;2747:6;2743:16;2737:23;2769:55;2819:3;2808:9;2804:19;2788:14;-1:-1:-1;;;;;1867:31:15;1855:44;;1801:104;2769:55;-1:-1:-1;2873:3:15;2861:16;;2855:23;-1:-1:-1;;;;;1867:31:15;;2937:3;2922:19;;1855:44;-1:-1:-1;2991:3:15;2979:16;;2973:23;1980:13;;1973:21;3052:3;3037:19;;1961:34;3005:52;3106:3;3098:6;3094:16;3088:23;3151:6;3142;3131:9;3127:22;3120:38;3175:54;3224:3;3213:9;3209:19;3193:14;3175:54;:::i;3240:569::-;3427:2;3416:9;3409:21;3472:6;3466:13;3461:2;3450:9;3446:18;3439:41;3561:1;3557;3552:3;3548:11;3544:19;3538:2;3530:6;3526:15;3520:22;3516:48;3511:2;3500:9;3496:18;3489:76;3633:2;3625:6;3621:15;3615:22;3608:30;3601:38;3596:2;3585:9;3581:18;3574:66;3390:4;3687:2;3679:6;3675:15;3669:22;3729:4;3722;3711:9;3707:20;3700:34;3751:52;3798:3;3787:9;3783:19;3769:12;3751:52;:::i;3814:387::-;3897:8;3907:6;3961:3;3954:4;3946:6;3942:17;3938:27;3928:55;;3979:1;3976;3969:12;3928:55;-1:-1:-1;4002:20:15;;-1:-1:-1;;;;;4034:30:15;;4031:50;;;4077:1;4074;4067:12;4031:50;4114:4;4106:6;4102:17;4090:29;;4174:3;4167:4;4157:6;4154:1;4150:14;4142:6;4138:27;4134:38;4131:47;4128:67;;;4191:1;4188;4181:12;4128:67;3814:387;;;;;:::o;4206:837::-;4357:6;4365;4373;4381;4434:2;4422:9;4413:7;4409:23;4405:32;4402:52;;;4450:1;4447;4440:12;4402:52;4490:9;4477:23;-1:-1:-1;;;;;4515:6:15;4512:30;4509:50;;;4555:1;4552;4545:12;4509:50;4594:90;4676:7;4667:6;4656:9;4652:22;4594:90;:::i;:::-;4703:8;;-1:-1:-1;4568:116:15;-1:-1:-1;;4791:2:15;4776:18;;4763:32;-1:-1:-1;;;;;4807:32:15;;4804:52;;;4852:1;4849;4842:12;4804:52;4891:92;4975:7;4964:8;4953:9;4949:24;4891:92;:::i;:::-;4206:837;;;;-1:-1:-1;5002:8:15;-1:-1:-1;;;;4206:837:15:o;5240:389::-;5328:6;5381:2;5369:9;5360:7;5356:23;5352:32;5349:52;;;5397:1;5394;5387:12;5349:52;5437:9;5424:23;-1:-1:-1;;;;;5462:6:15;5459:30;5456:50;;;5502:1;5499;5492:12;5456:50;5525:22;;5581:3;5563:16;;;5559:26;5556:46;;;5598:1;5595;5588:12;5634:884;5827:2;5816:9;5809:21;5790:4;5878:6;5865:20;5965:2;5961:7;5952:6;5936:14;5932:27;5928:41;5908:18;5904:66;5894:94;;5984:1;5981;5974:12;5894:94;6010:31;;6118:2;6107:14;;;6064:19;-1:-1:-1;;;;;6133:30:15;;6130:50;;;6176:1;6173;6166:12;6130:50;6225:6;6209:14;6205:27;6196:7;6192:41;6189:61;;;6246:1;6243;6236:12;6189:61;6286:2;6281;6270:9;6266:18;6259:30;6325:6;6320:2;6309:9;6305:18;6298:34;6383:6;6374:7;6369:2;6358:9;6354:18;6341:49;6439:1;6434:2;6425:6;6414:9;6410:22;6406:31;6399:42;6509:2;6502;6498:7;6493:2;6485:6;6481:15;6477:29;6466:9;6462:45;6458:54;6450:62;;;;5634:884;;;;:::o;6523:943::-;6720:2;6709:9;6702:21;6765:6;6759:13;6754:2;6743:9;6739:18;6732:41;6683:4;6820:2;6812:6;6808:15;6802:22;6862:4;6855;6844:9;6840:20;6833:34;6945:1;6941;6936:3;6932:11;6928:19;6913:12;6907:19;6903:45;6898:2;6887:9;6883:18;6876:73;-1:-1:-1;;;;;7014:2:15;7000:12;6996:21;6990:28;6986:53;6980:3;6969:9;6965:19;6958:82;7115:4;7101:12;7097:23;7091:30;7084:38;7077:46;7071:3;7060:9;7056:19;7049:75;7186:2;7172:12;7168:21;7162:28;7155:4;7144:9;7140:20;7133:58;7246:3;7232:12;7228:22;7222:29;7288:4;7282:3;7271:9;7267:19;7260:33;7316:54;7365:3;7354:9;7350:19;7334:14;7316:54;:::i;:::-;7302:68;;7431:3;7417:12;7413:22;7407:29;7401:3;7390:9;7386:19;7379:58;7454:6;7446:14;;;;6523:943;;;;:::o;7471:230::-;7541:6;7594:2;7582:9;7573:7;7569:23;7565:32;7562:52;;;7610:1;7607;7600:12;7562:52;-1:-1:-1;7655:16:15;;7471:230;-1:-1:-1;7471:230:15:o;7706:987::-;8135:3;8173:6;8167:13;8189:66;8248:6;8243:3;8236:4;8228:6;8224:17;8189:66;:::i;:::-;-1:-1:-1;;;8277:16:15;;;8302:18;;;8345:13;;8367:78;8345:13;8432:1;8421:13;;8414:4;8402:17;;8367:78;:::i;:::-;-1:-1:-1;;;8508:1:15;8464:20;;;;8500:10;;;8493:23;8541:13;;8563:75;8541:13;8625:1;8617:10;;8610:4;8598:17;;8563:75;:::i;:::-;8662:17;8654:33;;;;-1:-1:-1;;;;;7706:987:15:o;8698:127::-;8759:10;8754:3;8750:20;8747:1;8740:31;8790:4;8787:1;8780:15;8814:4;8811:1;8804:15;8830:250;8897:2;8891:9;8939:6;8927:19;;-1:-1:-1;;;;;8961:34:15;;8997:22;;;8958:62;8955:88;;;9023:18;;:::i;:::-;9059:2;9052:22;8830:250;:::o;9085:253::-;9157:2;9151:9;9199:4;9187:17;;-1:-1:-1;;;;;9219:34:15;;9255:22;;;9216:62;9213:88;;;9281:18;;:::i;9343:175::-;9421:13;;-1:-1:-1;;;;;9463:30:15;;9453:41;;9443:69;;9508:1;9505;9498:12;9523:131;-1:-1:-1;;;;;9598:31:15;;9588:42;;9578:70;;9644:1;9641;9634:12;9578:70;9523:131;:::o;9659:138::-;9738:13;;9760:31;9738:13;9760:31;:::i;9802:164::-;9878:13;;9927;;9920:21;9910:32;;9900:60;;9956:1;9953;9946:12;9971:698;10046:5;10078:1;-1:-1:-1;;;;;10094:6:15;10091:30;10088:56;;;10124:18;;:::i;:::-;-1:-1:-1;10279:2:15;10273:9;-1:-1:-1;;10192:2:15;10171:15;;10167:29;;10337:2;10325:15;10321:29;10309:42;;10402:22;;;-1:-1:-1;;;;;10366:34:15;;10363:62;10360:88;;;10428:18;;:::i;:::-;10464:2;10457:22;10512;;;10497:6;-1:-1:-1;10497:6:15;10549:16;;;10546:25;-1:-1:-1;10543:45:15;;;10584:1;10581;10574:12;10543:45;10597:66;10656:6;10649:4;10641:6;10637:17;10632:3;10597:66;:::i;10674:235::-;10727:5;10780:3;10773:4;10765:6;10761:17;10757:27;10747:55;;10798:1;10795;10788:12;10747:55;10820:83;10899:3;10890:6;10884:13;10877:4;10869:6;10865:17;10820:83;:::i;10914:1375::-;11011:6;11064:2;11052:9;11043:7;11039:23;11035:32;11032:52;;;11080:1;11077;11070:12;11032:52;11113:9;11107:16;-1:-1:-1;;;;;11138:6:15;11135:30;11132:50;;;11178:1;11175;11168:12;11132:50;11201:22;;11257:6;11239:16;;;11235:29;11232:49;;;11277:1;11274;11267:12;11232:49;11303:17;;:::i;:::-;11365:9;;11383:22;;11464:2;11456:11;;;11450:18;11484:14;;;11477:31;11540:41;11577:2;11569:11;;11540:41;:::i;:::-;11535:2;11528:5;11524:14;11517:65;11614:41;11651:2;11647;11643:11;11614:41;:::i;:::-;11609:2;11602:5;11598:14;11591:65;11689:42;11726:3;11722:2;11718:12;11689:42;:::i;:::-;11683:3;11672:15;;11665:67;11791:3;11783:12;;;11777:19;11812:15;;;11805:32;11870:43;11908:3;11900:12;;11870:43;:::i;:::-;11864:3;11857:5;11853:15;11846:68;11947:43;11985:3;11981:2;11977:12;11947:43;:::i;:::-;11941:3;11934:5;11930:15;11923:68;12024:40;12059:3;12055:2;12051:12;12024:40;:::i;:::-;12018:3;12011:5;12007:15;12000:65;12104:3;12100:2;12096:12;12090:19;-1:-1:-1;;;;;12124:8:15;12121:32;12118:52;;;12166:1;12163;12156:12;12118:52;12203:55;12250:7;12239:8;12235:2;12231:17;12203:55;:::i;:::-;12197:3;12186:15;;12179:80;-1:-1:-1;12190:5:15;10914:1375;-1:-1:-1;;;;10914:1375:15:o;12294:1036::-;12393:6;12446:2;12434:9;12425:7;12421:23;12417:32;12414:52;;;12462:1;12459;12452:12;12414:52;12495:9;12489:16;-1:-1:-1;;;;;12520:6:15;12517:30;12514:50;;;12560:1;12557;12550:12;12514:50;12583:22;;12639:4;12621:16;;;12617:27;12614:47;;;12657:1;12654;12647:12;12614:47;12683:22;;:::i;:::-;12750:9;;12768:22;;12828:2;12820:11;;12814:18;12841:33;12814:18;12841:33;:::i;:::-;12901:2;12890:14;;12883:31;12946:39;12981:2;12973:11;;12946:39;:::i;:::-;12941:2;12934:5;12930:14;12923:63;13025:2;13021;13017:11;13011:18;-1:-1:-1;;;;;13044:8:15;13041:32;13038:52;;;13086:1;13083;13076:12;13038:52;13117:8;13113:2;13109:17;13099:27;;;13164:7;13157:4;13153:2;13149:13;13145:27;13135:55;;13186:1;13183;13176:12;13135:55;13222:77;13291:7;13286:2;13280:9;13275:2;13271;13267:11;13222:77;:::i;:::-;13217:2;13206:14;;13199:101;13210:5;12294:1036;-1:-1:-1;;;;12294:1036:15:o;13335:127::-;13396:10;13391:3;13387:20;13384:1;13377:31;13427:4;13424:1;13417:15;13451:4;13448:1;13441:15;13467:327;13562:4;13620:11;13607:25;13714:3;13710:8;13699;13683:14;13679:29;13675:44;13655:18;13651:69;13641:97;;13734:1;13731;13724:12;13641:97;13755:33;;;;;13467:327;-1:-1:-1;;13467:327:15:o;13931:247::-;13990:6;14043:2;14031:9;14022:7;14018:23;14014:32;14011:52;;;14059:1;14056;14049:12;14011:52;14098:9;14085:23;14117:31;14142:5;14117:31;:::i",
        "linkReferences": {},
        "immutableReferences": {
            "446": [
                {
                    "start": 821,
                    "length": 32
                }
            ],
            "448": [
                {
                    "start": 862,
                    "length": 32
                }
            ],
            "450": [
                {
                    "start": 903,
                    "length": 32
                }
            ],
            "4794": [
                {
                    "start": 1367,
                    "length": 32
                }
            ],
            "4797": [
                {
                    "start": 516,
                    "length": 32
                },
                {
                    "start": 1088,
                    "length": 32
                }
            ],
            "4799": [
                {
                    "start": 287,
                    "length": 32
                },
                {
                    "start": 574,
                    "length": 32
                },
                {
                    "start": 1203,
                    "length": 32
                },
                {
                    "start": 1321,
                    "length": 32
                }
            ],
            "588": [
                {
                    "start": 2080,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "ATTESTATION_SCHEMA()": "5bf2f20d",
        "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
        "getSchema()": "6b122fe0",
        "getStatement(bytes32)": "5cc02d2f",
        "isPayable()": "ce46e046",
        "makeStatement((string),bytes32)": "455577cc",
        "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
        "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
        "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
        "version()": "54fd4d50"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFromStatement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getStatement\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"internalType\":\"struct JobResultObligation.StatementData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"makeStatement\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Statements/JobResultObligation.sol\":\"JobResultObligation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880\",\"dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158\",\"dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz\"]},\"lib/eas-contracts/contracts/ISemver.sol\":{\"keccak256\":\"0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0\",\"dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808\",\"dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f\",\"dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828\",\"dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4\",\"dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440\",\"dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966\",\"dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb\",\"dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426\",\"dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY\"]},\"src/BaseStatement.sol\":{\"keccak256\":\"0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd\",\"dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778\",\"dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp\"]},\"src/Statements/JobResultObligation.sol\":{\"keccak256\":\"0x9fa25ab5df46e6dfe00451b33222b01e30a5ef399e7f4137738720e9172b02ee\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4743b578b759340d468484ef4ef27ea420242a527a1a636e20e7461657642c35\",\"dweb:/ipfs/QmYPbm7FbC7dwAr5mfTAXkCjmRouPzM61fdPAzqGsUu6YY\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IEAS",
                            "name": "_eas",
                            "type": "address"
                        },
                        {
                            "internalType": "contract ISchemaRegistry",
                            "name": "_schemaRegistry",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccessDenied"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidEAS"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidLength"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotFromStatement"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPayable"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ATTESTATION_SCHEMA",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "attest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getSchema",
                    "outputs": [
                        {
                            "internalType": "struct SchemaRecord",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "contract ISchemaResolver",
                                    "name": "resolver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "string",
                                    "name": "schema",
                                    "type": "string"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "uid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getStatement",
                    "outputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "isPayable",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct JobResultObligation.StatementData",
                            "name": "data",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "string",
                                    "name": "result",
                                    "type": "string"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes32",
                            "name": "refUID",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "makeStatement",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiAttest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiRevoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "revoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "receive"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The new attestation."
                        },
                        "returns": {
                            "_0": "Whether the attestation is valid."
                        }
                    },
                    "isPayable()": {
                        "returns": {
                            "_0": "Whether the resolver supports ETH transfers."
                        }
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The new attestations.",
                            "values": "Explicit ETH amounts which were sent with each attestation."
                        },
                        "returns": {
                            "_0": "Whether all the attestations are valid."
                        }
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The existing attestations to be revoked.",
                            "values": "Explicit ETH amounts which were sent with each revocation."
                        },
                        "returns": {
                            "_0": "Whether the attestations can be revoked."
                        }
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The existing attestation to be revoked."
                        },
                        "returns": {
                            "_0": "Whether the attestation can be revoked."
                        }
                    },
                    "version()": {
                        "returns": {
                            "_0": "Semver contract version as a string."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation and verifies whether it's valid."
                    },
                    "isPayable()": {
                        "notice": "Checks if the resolver can be sent ETH."
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes multiple attestations and verifies whether they are valid."
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation revocation and verifies if it can be revoked."
                    },
                    "version()": {
                        "notice": "Returns the full semver contract version."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eas/=lib/eas-contracts/contracts/",
                "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "eas-contracts/=lib/eas-contracts/contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/Statements/JobResultObligation.sol": "JobResultObligation"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/eas-contracts/contracts/Common.sol": {
                "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
                "urls": [
                    "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
                    "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/IEAS.sol": {
                "keccak256": "0xdad0674defce04905dc7935f2756d6c477a6e876c0b1b7094b112a862f164c12",
                "urls": [
                    "bzz-raw://49e448c26c08952df034692d2ab3519dd40a1ebbeae4ce68b294567441933880",
                    "dweb:/ipfs/QmWHcudjskUSCjgqsNWE65LVfWvcYB2vBn8RB1SmzvRLNR"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
                "keccak256": "0xea97dcd36a0c422169cbaac06698249e199049b627c16bff93fb8ab829058754",
                "urls": [
                    "bzz-raw://d453a929ef64a69cd31195ec2ee5ed1193bfa29f633e13c960e92154c37ad158",
                    "dweb:/ipfs/QmXs1Z3njbHs2EMgHonrZDfcwdog4kozHY5tYNrhZK5yqz"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/ISemver.sol": {
                "keccak256": "0x04a67939b4e1a8d0a51101b8f69f8882930bbdc66319f38023828625b5d1ff18",
                "urls": [
                    "bzz-raw://3dd543fa0e33cef1ea757627f9c2a10a66ee1ce17aa9087f437c5b53a903c7f0",
                    "dweb:/ipfs/QmXsy6UsGBzF9zPCCjmiwPpCcX3tHqU13TmR67B69tKnR6"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/Semver.sol": {
                "keccak256": "0x4f23442d048661b6aaa188ddc16b69cb310c2e44066b3852026afcb4201d61a9",
                "urls": [
                    "bzz-raw://30c36e580cd93d9acb13e1a11e833946a8bd0bd2a8d1b2be049f0d96e0989808",
                    "dweb:/ipfs/QmXmQTxKjSrUWutafQsqkbGufXqtzxuDAiMMJjXCHXiEqh"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
                "keccak256": "0xb7d1961ed928c620cddf35c2bf46845b10828bc5d73145214630202ed355b6bb",
                "urls": [
                    "bzz-raw://cf1cabacfb15c9bace8280b540b52e5aa440e1b4eba675f9782c34ce0f03902f",
                    "dweb:/ipfs/QmakYcK4xbrijzvoaBCmBJK6HeaBqbXxWKtDQ1z62aXwCR"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
                "keccak256": "0x385d8c0edbdc96af15cf8f22333183162561cbf7d3fb0df95287741e59899983",
                "urls": [
                    "bzz-raw://ff7e8a17f69dcb7ddc937446e868d34baea61bbe249a8f5d8be486ab93001828",
                    "dweb:/ipfs/QmUz9i7ViNK9kUWHeJRtE44HmpbxBDGJBjyec2aPD6Nn3Q"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
                "keccak256": "0x156d11cd8394cb9245b0bb9d7a27f5b3e7193e3cec7b91a66474ae01af8d818c",
                "urls": [
                    "bzz-raw://6f171e65be237fe4aaa2f7a74862c10a06535b8c04baa42e848a63c6fc96bcd4",
                    "dweb:/ipfs/QmUdz8WHcrjqYmbRaz5PFN2N2thfvQjcqTorZUfcmWTfat"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0xca3b393fc1c04a4411d3776adb9763a8780f6fb04b618f2807faa5f295ef19d2",
                "urls": [
                    "bzz-raw://597006f69dd3711b302e2cf4fea2ee0f3b016a9c609dc05d2aac541911503440",
                    "dweb:/ipfs/QmUHZnXu6tTDKqaSNWU4iwyovyL7fXTrZrabu7ijnHNUJG"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0xd2fb25b789ccaf6bf50b147ecff4c9d62d05d3f5c5d562fdf568f6926a2a280c",
                "urls": [
                    "bzz-raw://521e2df6ed2080c9ae2f442b27a827551ab96ff2e5f920ad6dc978c355b4b966",
                    "dweb:/ipfs/Qme1Z6dU7ZDQMfKiHwpLejAyFGsP9HpijvX9uzxivEGjga"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
                "keccak256": "0x8cdcfbd2484c2e7db797f57ff8731fe11d7ab0092c7a1112f8ad6047ad6d4481",
                "urls": [
                    "bzz-raw://356742c148ca77b9d953059072c32cf9d0d98ae782129fe442c73a6736bfd7cb",
                    "dweb:/ipfs/QmZN5jdoBbCihsv1RK8n6pf6cC89pi77KGAasn7ZvyuNTn"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0xb569f4a67508470689fe1152c382b20c9332039fe80ff5953b1dba5bcdca0dd0",
                "urls": [
                    "bzz-raw://bfbe7b1a9f44e94489c0490811b894fcc74d8362202e8f2ccf4a8c2ecca63426",
                    "dweb:/ipfs/QmZyNhacF4B4WC8r1mDKyWuzjdVsWgA6RmYt31yoxAPsNY"
                ],
                "license": "MIT"
            },
            "src/BaseStatement.sol": {
                "keccak256": "0x1c026a554c131a7c9019cfa74a8c1c96f734eca5bb6d24a16afd6dd4f8cec1ba",
                "urls": [
                    "bzz-raw://bba46f25fe7f38886a2a96b0be650c117983ca927784543bc460b921225bb0dd",
                    "dweb:/ipfs/QmVBLDrFn4H8JcF4zptZKTXu1Wp62Xjk2rPd5prksBpqhs"
                ],
                "license": "UNLICENSED"
            },
            "src/IArbiter.sol": {
                "keccak256": "0x1081592b193da4a0afa7524b03e5714f12770c6979bc65362714a7238705c647",
                "urls": [
                    "bzz-raw://3d676d3f5dcbb43ad28c18776d07d7b6567094a4effb2de8fe8455a6a45a9778",
                    "dweb:/ipfs/QmYvL7JcFowSjcceZV4VRUDFV9RD5tg7vD4zeXTYACUmBp"
                ],
                "license": "UNLICENSED"
            },
            "src/Statements/JobResultObligation.sol": {
                "keccak256": "0x9fa25ab5df46e6dfe00451b33222b01e30a5ef399e7f4137738720e9172b02ee",
                "urls": [
                    "bzz-raw://4743b578b759340d468484ef4ef27ea420242a527a1a636e20e7461657642c35",
                    "dweb:/ipfs/QmYPbm7FbC7dwAr5mfTAXkCjmRouPzM61fdPAzqGsUu6YY"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 14
}
