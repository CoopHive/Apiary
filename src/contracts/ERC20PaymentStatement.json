{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_eas",
                    "type": "address",
                    "internalType": "contract IEAS"
                },
                {
                    "name": "_schemaRegistry",
                    "type": "address",
                    "internalType": "contract ISchemaRegistry"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "receive",
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "ATTESTATION_SCHEMA",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "DEMAND_ABI",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "IS_REVOCABLE",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "SCHEMA_ABI",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "_checkIdentical",
            "inputs": [
                {
                    "name": "statement",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "demand",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "attest",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "cancelStatement",
            "inputs": [
                {
                    "name": "uid",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "checkStatement",
            "inputs": [
                {
                    "name": "statement",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "demand",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "collectPayment",
            "inputs": [
                {
                    "name": "_payment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_fulfillment",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "eas",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract IEAS"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getDemandAbi",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "getSchemaAbi",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "isPayable",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "makeStatement",
            "inputs": [
                {
                    "name": "data",
                    "type": "tuple",
                    "internalType": "struct ERC20PaymentStatement.StatementData",
                    "components": [
                        {
                            "name": "token",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "amount",
                            "type": "uint256",
                            "internalType": "uint256"
                        },
                        {
                            "name": "arbiter",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "demand",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "expirationTime",
                    "type": "uint64",
                    "internalType": "uint64"
                },
                {
                    "name": "refUID",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "multiAttest",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "multiRevoke",
            "inputs": [
                {
                    "name": "attestations",
                    "type": "tuple[]",
                    "internalType": "struct Attestation[]",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                },
                {
                    "name": "values",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "revoke",
            "inputs": [
                {
                    "name": "attestation",
                    "type": "tuple",
                    "internalType": "struct Attestation",
                    "components": [
                        {
                            "name": "uid",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "schema",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "time",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "expirationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "revocationTime",
                            "type": "uint64",
                            "internalType": "uint64"
                        },
                        {
                            "name": "refUID",
                            "type": "bytes32",
                            "internalType": "bytes32"
                        },
                        {
                            "name": "recipient",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "attester",
                            "type": "address",
                            "internalType": "address"
                        },
                        {
                            "name": "revocable",
                            "type": "bool",
                            "internalType": "bool"
                        },
                        {
                            "name": "data",
                            "type": "bytes",
                            "internalType": "bytes"
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "schemaRegistry",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract ISchemaRegistry"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "error",
            "name": "AccessDenied",
            "inputs": []
        },
        {
            "type": "error",
            "name": "DeadlineExpired",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InsufficientValue",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidEAS",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidFulfillment",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidLength",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPayment",
            "inputs": []
        },
        {
            "type": "error",
            "name": "InvalidPaymentAttestation",
            "inputs": []
        },
        {
            "type": "error",
            "name": "NotPayable",
            "inputs": []
        },
        {
            "type": "error",
            "name": "UnauthorizedCall",
            "inputs": []
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "445:4002:40:-:0;;;1009:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1084:4;1090:15;1107:10;;;;;;;;;;;;;;;;;998:4;705:14:3;;;;683:1:5;729:14:3;;686:1:5;753:13:3;;575:4:37;-1:-1:-1;;;;;703:26:5;::::1;699:76;;752:12;;-1:-1:-1::0;;;752:12:5::1;;;;;;;;;;;699:76;-1:-1:-1::0;;;;;785:10:5;;::::1;;::::0;595::37;;::::1;;::::0;615:32;::::1;;::::0;;;678:48:::1;::::0;-1:-1:-1;;;678:48:37;;:23:::1;::::0;:48:::1;::::0;702:6;;710:4:::1;::::0;716:9;;678:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;657:69;::::0;-1:-1:-1;445:4002:40;;-1:-1:-1;;;;;445:4002:40;14:137:42;-1:-1:-1;;;;;95:31:42;;85:42;;75:70;;141:1;138;131:12;75:70;14:137;:::o;156:432::-;270:6;278;331:2;319:9;310:7;306:23;302:32;299:52;;;347:1;344;337:12;299:52;379:9;373:16;398:37;429:5;398:37;:::i;:::-;504:2;489:18;;483:25;454:5;;-1:-1:-1;517:39:42;483:25;517:39;:::i;:::-;575:7;565:17;;;156:432;;;;;:::o;593:734::-;812:2;801:9;794:21;775:4;844:6;838:13;887:6;882:2;871:9;867:18;860:34;912:1;922:145;936:6;933:1;930:13;922:145;;;1050:4;1034:14;;;1030:25;;1024:32;1018:3;999:17;;;995:27;988:69;951:12;922:145;;;-1:-1:-1;1117:1:42;1111:3;1087:22;;;1083:32;;1076:43;;;;-1:-1:-1;;;;;1229:32:42;;;;1222:4;1207:20;;1200:62;1305:14;;1298:22;1293:2;1278:18;;1271:50;-1:-1:-1;1180:2:42;1159:15;;;-1:-1:-1;;1155:29:42;1140:45;1136:55;;;-1:-1:-1;593:734:42:o;1332:184::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:16:42;;1332:184;-1:-1:-1;1332:184:42:o;:::-;445:4002:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "445:4002:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:12:5;;-1:-1:-1;;;1178:12:5;;;;;;;;;;;445:4002:40;;;;2633:483;;;;;;;;;;-1:-1:-1;2633:483:40;;;;;:::i;:::-;;:::i;:::-;;;506:14:42;;499:22;481:41;;469:2;454:18;2633:483:40;;;;;;;;3122:606;;;;;;;;;;-1:-1:-1;3122:606:40;;;;;:::i;:::-;;:::i;962:40::-;;;;;;;;;;;;998:4;962:40;;754:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1843:784::-;;;;;;;;;;-1:-1:-1;1843:784:40;;;;;:::i;:::-;;:::i;4233:103::-;;;;;;;;;;;;;:::i;373:47:37:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6063:32:42;;;6045:51;;6033:2;6018:18;373:47:37;5876:226:42;1145:692:40;;;;;;;;;;-1:-1:-1;1145:692:40;;;;;:::i;:::-;;:::i;:::-;;;6905:25:42;;;6893:2;6878:18;1145:692:40;6759:177:42;890:234:3;;;;;;;;;;;;;:::i;172:43:36:-;;;;;;;;;;;;;;;660:173;;;;;;;;;;-1:-1:-1;660:173:36;;;;;:::i;:::-;809:17;;;;;;;790:14;;;;;780:25;;;;;:46;;660:173;426:25:37;;;;;;;;;;;;;;;3128:1460:5;;;;;;:::i;:::-;;:::i;1437:1461::-;;;;;;:::i;:::-;;:::i;976:85::-;;;;;;;;;;-1:-1:-1;1026:4:5;976:85;;2940:146;;;;;;:::i;:::-;;:::i;1249:::-;;;;;;:::i;:::-;;:::i;2633:483:40:-;2736:23;;-1:-1:-1;;;2736:23:40;;;;;6905:25:42;;;2687:4:40;;;;-1:-1:-1;;;;;2736:3:40;:18;;;;6878::42;;2736:23:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2736:23:40;;;;;;;;;;;;:::i;:::-;2703:56;;2787:11;:21;;;-1:-1:-1;;;;;2773:35:40;:10;-1:-1:-1;;;;;2773:35:40;;2769:66;;2817:18;;-1:-1:-1;;;2817:18:40;;;;;;;;;;;2769:66;2857:98;;;;;;;;2884:18;2857:98;;2910:43;;;;;;;;;;-1:-1:-1;2857:98:40;2910:43;;;;;;;2857:98;;;;;;2846:110;;-1:-1:-1;;;2846:110:40;;11863:13:42;;2846:110:40;;;11845:32:42;11906:24;11968:19;;11946:20;;;11939:49;12030:23;;;12024:30;12004:18;;;11997:58;2846:3:40;-1:-1:-1;;;;;2846:10:40;;;;11818:18:42;;2846:110:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:25;3006:11;:16;;;2995:45;;;;;;;;;;;;:::i;:::-;3064:10;;3097:11;;;;3057:52;;-1:-1:-1;;;3057:52:40;;3085:10;3057:52;;;13271:51:42;13338:18;;;13331:34;;;;3064:10:40;;-1:-1:-1;;;;;;3057:27:40;;;;13244:18:42;;3057:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3050:59;2633:483;-1:-1:-1;;;;2633:483:40:o;3122:606::-;3288:4;3313:26;3329:9;3313:15;:26::i;:::-;3308:45;;-1:-1:-1;3348:5:40;3341:12;;3308:45;3364:28;3406:9;:14;;;3395:43;;;;;;;;;;;;:::i;:::-;3364:74;;3448:31;3493:6;3482:35;;;;;;;;;;;;:::i;:::-;3552:16;;3535:13;;3448:69;;-1:-1:-1;;;;;;3535:33:40;;;;;;:72;;;;;3590:10;:17;;;3572:7;:14;;;:35;;3535:72;:125;;;;;3642:10;:18;;;-1:-1:-1;;;;;3623:37:40;:7;:15;;;-1:-1:-1;;;;;3623:37:40;;3535:125;:186;;;;;3703:10;:17;;;3693:28;;;;;;3674:7;:14;;;3664:25;;;;;;:57;3535:186;3528:193;;;;3122:606;;;;;;:::o;754:98::-;;;;;;;;;;;;;;;;;;;:::o;1843:784::-;1968:28;;-1:-1:-1;;;1968:28:40;;;;;6905:25:42;;;1923:4:40;;;;-1:-1:-1;;;;;1968:3:40;:18;;;;6878::42;;1968:28:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1968:28:40;;;;;;;;;;;;:::i;:::-;2039:32;;-1:-1:-1;;;2039:32:40;;;;;6905:25:42;;;1939:57:40;;-1:-1:-1;2006:30:40;;-1:-1:-1;;;;;2039:3:40;:18;;;;6878::42;;2039:32:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2039:32:40;;;;;;;;;;;;:::i;:::-;2006:65;;2087:24;2103:7;2087:15;:24::i;:::-;2082:65;;2120:27;;-1:-1:-1;;;2120:27:40;;;;;;;;;;;2082:65;2158:32;2204:7;:12;;;2193:41;;;;;;;;;;;;:::i;:::-;2158:76;;2295:54;2315:7;2324:11;2337;2295:19;:54::i;:::-;2290:88;;2358:20;;-1:-1:-1;;;2358:20:40;;;;;;;;;;;2290:88;2413:103;;;;;;;;2440:18;2413:103;;2466:48;;;;;;;;;;-1:-1:-1;2413:103:40;2466:48;;;;;;;2413:103;;;;;;2389:137;;-1:-1:-1;;;2389:137:40;;11863:13:42;;2389:137:40;;;11845:32:42;11906:24;11968:19;;11946:20;;;11939:49;12030:23;;;12024:30;12004:18;;;11997:58;2389:3:40;-1:-1:-1;;;;;2389:10:40;;;;11818:18:42;;2389:137:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2550:17:40;;2578:21;;;;2601:18;;;;2543:77;;-1:-1:-1;;;2543:77:40;;-1:-1:-1;;;;;13289:32:42;;;2543:77:40;;;13271:51:42;13338:18;;;13331:34;;;;2543::40;;;-1:-1:-1;2543:34:40;;-1:-1:-1;13244:18:42;;2543:77:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2536:84;1843:784;-1:-1:-1;;;;;;1843:784:40:o;4233:103::-;4287:13;4319:10;;;;;;;;;;;;;;;;;4312:17;;4233:103;:::o;1145:692::-;1268:7;1303:10;;;;:4;:10;:::i;:::-;1296:71;;-1:-1:-1;;;1296:71:40;;1328:10;1296:71;;;14080:51:42;1348:4:40;14147:18:42;;;14140:60;1355:11:40;;;;14216:18:42;;;14209:34;-1:-1:-1;;;;;1296:31:40;;;;;;;14053:18:42;;1296:71:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1291:101;;1376:16;;-1:-1:-1;;;1376:16:40;;;;;;;;;;;1291:101;1410:3;-1:-1:-1;;;;;1410:10:40;;1434:386;;;;;;;;1479:18;1434:386;;;;1521:284;;;;;;;;1577:10;-1:-1:-1;;;;;1521:284:40;;;;;1625:14;-1:-1:-1;;;;;1521:284:40;;;;;1672:4;1521:284;;;;;;1706:6;1521:284;;;;1751:4;1740:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;1521:284;;;;1785:1;1521:284;;;1434:386;;;1410:420;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;890:234:3:-;932:13;1017:24;1034:6;1017:16;:24::i;:::-;1048;1065:6;1048:16;:24::i;:::-;1079:23;1096:5;1079:16;:23::i;:::-;1000:103;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;957:160;;890:234;:::o;3128:1460:5:-;3269:4;905:10;:8;:10::i;:::-;3302:12;3335:23;;::::1;3331:76;;3381:15;;-1:-1:-1::0;;;3381:15:5::1;;;;;;;;;;;3331:76;3839:9;3814:22;3859:701;3883:6;3879:1;:10;3859:701;;;4016:13;4032:6;;4039:1;4032:9;;;;;;;:::i;:::-;;;;;;;4016:25;;4067:14;4059:5;:22;4055:87;;;4108:19;;-1:-1:-1::0;;;4108:19:5::1;;;;;;;;;;;4055:87;4270:32;4279:12;;4292:1;4279:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1081:4:37;;964:128;4270:32:5::1;4265:84;;4329:5;4322:12;;;;;;;;4265:84;4512:23:::0;;::::1;::::0;1489:1:0;1485:5;3859:701:5::1;;;-1:-1:-1::0;4577:4:5::1;::::0;3128:1460;-1:-1:-1;;;;;;;3128:1460:5:o;1437:1461::-;1578:4;905:10;:8;:10::i;:::-;1611:12;1644:23;;::::1;1640:76;;1690:15;;-1:-1:-1::0;;;1690:15:5::1;;;;;;;;;;;1640:76;2148:9;2123:22;2168:702;2192:6;2188:1;:10;2168:702;;;2325:13;2341:6;;2348:1;2341:9;;;;;;;:::i;:::-;;;;;;;2325:25;;2376:14;2368:5;:22;2364:87;;;2417:19;;-1:-1:-1::0;;;2417:19:5::1;;;;;;;;;;;2364:87;2580:32;2589:12;;2602:1;2589:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2606:5;2580:8;:32::i;:::-;2575:84;;2639:5;2632:12;;;;;;;;2575:84;2822:23:::0;;::::1;::::0;1489:1:0;1485:5;2168:702:5::1;;2940:146:::0;3024:4;905:10;:8;:10::i;:::-;1081:4:37;3047:32:5::1;3040:39;;926:1;2940:146:::0;;;:::o;1249:::-;1333:4;905:10;:8;:10::i;:::-;1356:32:::1;1365:11;1378:9;1356:8;:32::i;222:432:36:-:0;300:4;364:18;344:9;:16;;;:38;340:56;;-1:-1:-1;391:5:36;;222:432;-1:-1:-1;222:432:36:o;340:56::-;435:24;;;;-1:-1:-1;;;;;435:29:36;;;;;:75;;;495:15;468:9;:24;;;-1:-1:-1;;;;;468:42:36;;435:75;431:105;;;519:17;;-1:-1:-1;;;519:17:36;;;;;;;;;;;431:105;575:24;;;;-1:-1:-1;;;;;575:29:36;;571:54;;613:12;;-1:-1:-1;;;613:12:36;;;;;;;;;;;571:54;-1:-1:-1;643:4:36;;222:432;-1:-1:-1;222:432:36:o;3734:493:40:-;3910:4;4035:11;:15;;;4017:7;:14;;;:33;4013:50;;-1:-1:-1;4059:4:40;4052:11;;4013:50;4139:19;;;;;4188:18;;;;4208:11;;4130:90;;-1:-1:-1;;;4130:90:40;;-1:-1:-1;;;;;4130:44:40;;;;;;:90;;4175:11;;4188:18;;4130:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;637:698:31;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;-1:-1:-1;;;;;817:18:31;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:31;-1:-1:-1;794:41:31;-1:-1:-1;955:28:31;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:31;-1:-1:-1;;;1175:2:31;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:31;1010:282;1256:21;-1:-1:-1;1312:6:31;637:698;-1:-1:-1;;;637:698:31:o;6035:128:5:-;6082:10;-1:-1:-1;;;;;6104:4:5;6082:27;;6078:79;;6132:14;;-1:-1:-1;;;6132:14:5;;;;;;;;;;;6078:79;6035:128::o;739:219:37:-;845:4;946;914:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;914:37:37;;;739:219;-1:-1:-1;;;739:219:37:o;12214:916:32:-;12267:7;;-1:-1:-1;;;12342:17:32;;12338:103;;-1:-1:-1;;;12379:17:32;;;-1:-1:-1;12424:2:32;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:32;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:32;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:32;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:32;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:32;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13025:66;13117:6;12214:916;-1:-1:-1;;12214:916:32:o;14:226:42:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:42;;14:226;-1:-1:-1;14:226:42:o;533:127::-;594:10;589:3;585:20;582:1;575:31;625:4;622:1;615:15;649:4;646:1;639:15;665:255;737:2;731:9;779:6;767:19;;-1:-1:-1;;;;;801:34:42;;837:22;;;798:62;795:88;;;863:18;;:::i;:::-;899:2;892:22;665:255;:::o;925:253::-;997:2;991:9;1039:4;1027:17;;-1:-1:-1;;;;;1059:34:42;;1095:22;;;1056:62;1053:88;;;1121:18;;:::i;1183:275::-;1254:2;1248:9;1319:2;1300:13;;-1:-1:-1;;1296:27:42;1284:40;;-1:-1:-1;;;;;1339:34:42;;1375:22;;;1336:62;1333:88;;;1401:18;;:::i;:::-;1437:2;1430:22;1183:275;;-1:-1:-1;1183:275:42:o;1463:129::-;-1:-1:-1;;;;;1541:5:42;1537:30;1530:5;1527:41;1517:69;;1582:1;1579;1572:12;1517:69;1463:129;:::o;1597:132::-;1664:20;;1693:30;1664:20;1693:30;:::i;1734:131::-;-1:-1:-1;;;;;1809:31:42;;1799:42;;1789:70;;1855:1;1852;1845:12;1870:134;1938:20;;1967:31;1938:20;1967:31;:::i;2009:118::-;2095:5;2088:13;2081:21;2074:5;2071:32;2061:60;;2117:1;2114;2107:12;2132:128;2197:20;;2226:28;2197:20;2226:28;:::i;2265:186::-;2313:4;-1:-1:-1;;;;;2338:6:42;2335:30;2332:56;;;2368:18;;:::i;:::-;-1:-1:-1;2434:2:42;2413:15;-1:-1:-1;;2409:29:42;2440:4;2405:40;;2265:186::o;2456:486::-;2498:5;2551:3;2544:4;2536:6;2532:17;2528:27;2518:55;;2569:1;2566;2559:12;2518:55;2609:6;2596:20;2640:52;2656:35;2684:6;2656:35;:::i;:::-;2640:52;:::i;:::-;2717:6;2708:7;2701:23;2771:3;2764:4;2755:6;2747;2743:19;2739:30;2736:39;2733:59;;;2788:1;2785;2778:12;2733:59;2853:6;2846:4;2838:6;2834:17;2827:4;2818:7;2814:18;2801:59;2909:1;2880:20;;;2902:4;2876:31;2869:42;;;;2884:7;2456:486;-1:-1:-1;;;2456:486:42:o;2947:1133::-;3005:5;3053:6;3041:9;3036:3;3032:19;3028:32;3025:52;;;3073:1;3070;3063:12;3025:52;3095:22;;:::i;:::-;3162:23;;3194:22;;3289:2;3274:18;;;3261:32;3309:14;;;3302:31;3086;-1:-1:-1;3365:37:42;3398:2;3383:18;;3365:37;:::i;:::-;3360:2;3353:5;3349:14;3342:61;3435:37;3468:2;3457:9;3453:18;3435:37;:::i;:::-;3430:2;3423:5;3419:14;3412:61;3506:38;3539:3;3528:9;3524:19;3506:38;:::i;:::-;3500:3;3489:15;;3482:63;3618:3;3603:19;;;3590:33;3639:15;;;3632:32;3697:39;3731:3;3716:19;;3697:39;:::i;:::-;3691:3;3684:5;3680:15;3673:64;3770:39;3804:3;3793:9;3789:19;3770:39;:::i;:::-;3764:3;3757:5;3753:15;3746:64;3843:36;3874:3;3863:9;3859:19;3843:36;:::i;:::-;3837:3;3830:5;3826:15;3819:61;3931:3;3920:9;3916:19;3903:33;-1:-1:-1;;;;;3951:6:42;3948:30;3945:50;;;3991:1;3988;3981:12;3945:50;4028:45;4069:3;4060:6;4049:9;4045:22;4028:45;:::i;:::-;4022:3;4015:5;4011:15;4004:70;;2947:1133;;;;:::o;4085:679::-;4198:6;4206;4214;4267:2;4255:9;4246:7;4242:23;4238:32;4235:52;;;4283:1;4280;4273:12;4235:52;4323:9;4310:23;-1:-1:-1;;;;;4348:6:42;4345:30;4342:50;;;4388:1;4385;4378:12;4342:50;4411:62;4465:7;4456:6;4445:9;4441:22;4411:62;:::i;:::-;4401:72;;;4526:2;4515:9;4511:18;4498:32;-1:-1:-1;;;;;4545:8:42;4542:32;4539:52;;;4587:1;4584;4577:12;4539:52;4610:51;4653:7;4642:8;4631:9;4627:24;4610:51;:::i;:::-;4085:679;;4600:61;;-1:-1:-1;;;;4730:2:42;4715:18;;;;4702:32;;4085:679::o;4769:250::-;4854:1;4864:113;4878:6;4875:1;4872:13;4864:113;;;4954:11;;;4948:18;4935:11;;;4928:39;4900:2;4893:10;4864:113;;;-1:-1:-1;;5011:1:42;4993:16;;4986:27;4769:250::o;5024:271::-;5066:3;5104:5;5098:12;5131:6;5126:3;5119:19;5147:76;5216:6;5209:4;5204:3;5200:14;5193:4;5186:5;5182:16;5147:76;:::i;:::-;5277:2;5256:15;-1:-1:-1;;5252:29:42;5243:39;;;;5284:4;5239:50;;5024:271;-1:-1:-1;;5024:271:42:o;5300:220::-;5449:2;5438:9;5431:21;5412:4;5469:45;5510:2;5499:9;5495:18;5487:6;5469:45;:::i;5525:346::-;5593:6;5601;5654:2;5642:9;5633:7;5629:23;5625:32;5622:52;;;5670:1;5667;5660:12;5622:52;-1:-1:-1;;5715:23:42;;;5835:2;5820:18;;;5807:32;;-1:-1:-1;5525:346:42:o;6107:647::-;6217:6;6225;6233;6286:2;6274:9;6265:7;6261:23;6257:32;6254:52;;;6302:1;6299;6292:12;6254:52;6342:9;6329:23;-1:-1:-1;;;;;6367:6:42;6364:30;6361:50;;;6407:1;6404;6397:12;6361:50;6430:22;;6486:3;6468:16;;;6464:26;6461:46;;;6503:1;6500;6493:12;6461:46;6526:2;-1:-1:-1;6578:2:42;6563:18;;6550:32;6591:30;6550:32;6591:30;:::i;:::-;6107:647;;6640:5;;-1:-1:-1;;;6718:2:42;6703:18;;;;6690:32;;6107:647::o;6941:565::-;7045:6;7053;7106:2;7094:9;7085:7;7081:23;7077:32;7074:52;;;7122:1;7119;7112:12;7074:52;7162:9;7149:23;-1:-1:-1;;;;;7187:6:42;7184:30;7181:50;;;7227:1;7224;7217:12;7181:50;7250:62;7304:7;7295:6;7284:9;7280:22;7250:62;:::i;:::-;7240:72;;;7365:2;7354:9;7350:18;7337:32;-1:-1:-1;;;;;7384:8:42;7381:32;7378:52;;;7426:1;7423;7416:12;7378:52;7449:51;7492:7;7481:8;7470:9;7466:24;7449:51;:::i;:::-;7439:61;;;6941:565;;;;;:::o;7731:387::-;7814:8;7824:6;7878:3;7871:4;7863:6;7859:17;7855:27;7845:55;;7896:1;7893;7886:12;7845:55;-1:-1:-1;7919:20:42;;-1:-1:-1;;;;;7951:30:42;;7948:50;;;7994:1;7991;7984:12;7948:50;8031:4;8023:6;8019:17;8007:29;;8091:3;8084:4;8074:6;8071:1;8067:14;8059:6;8055:27;8051:38;8048:47;8045:67;;;8108:1;8105;8098:12;8045:67;7731:387;;;;;:::o;8123:837::-;8274:6;8282;8290;8298;8351:2;8339:9;8330:7;8326:23;8322:32;8319:52;;;8367:1;8364;8357:12;8319:52;8407:9;8394:23;-1:-1:-1;;;;;8432:6:42;8429:30;8426:50;;;8472:1;8469;8462:12;8426:50;8511:90;8593:7;8584:6;8573:9;8569:22;8511:90;:::i;:::-;8620:8;;-1:-1:-1;8485:116:42;-1:-1:-1;;8708:2:42;8693:18;;8680:32;-1:-1:-1;;;;;8724:32:42;;8721:52;;;8769:1;8766;8759:12;8721:52;8808:92;8892:7;8881:8;8870:9;8866:24;8808:92;:::i;:::-;8123:837;;;;-1:-1:-1;8919:8:42;-1:-1:-1;;;;8123:837:42:o;8965:389::-;9053:6;9106:2;9094:9;9085:7;9081:23;9077:32;9074:52;;;9122:1;9119;9112:12;9074:52;9162:9;9149:23;-1:-1:-1;;;;;9187:6:42;9184:30;9181:50;;;9227:1;9224;9217:12;9181:50;9250:22;;9306:3;9288:16;;;9284:26;9281:46;;;9323:1;9320;9313:12;9359:136;9437:13;;9459:30;9437:13;9459:30;:::i;9500:138::-;9579:13;;9601:31;9579:13;9601:31;:::i;9643:132::-;9719:13;;9741:28;9719:13;9741:28;:::i;9780:461::-;9833:5;9886:3;9879:4;9871:6;9867:17;9863:27;9853:55;;9904:1;9901;9894:12;9853:55;9937:6;9931:13;9968:52;9984:35;10012:6;9984:35;:::i;9968:52::-;10045:6;10036:7;10029:23;10099:3;10092:4;10083:6;10075;10071:19;10067:30;10064:39;10061:59;;;10116:1;10113;10106:12;10061:59;10129:81;10203:6;10196:4;10187:7;10183:18;10176:4;10168:6;10164:17;10129:81;:::i;10246:1380::-;10343:6;10396:2;10384:9;10375:7;10371:23;10367:32;10364:52;;;10412:1;10409;10402:12;10364:52;10445:9;10439:16;-1:-1:-1;;;;;10470:6:42;10467:30;10464:50;;;10510:1;10507;10500:12;10464:50;10533:22;;10589:6;10571:16;;;10567:29;10564:49;;;10609:1;10606;10599:12;10564:49;10635:22;;:::i;:::-;10702:9;;10720:22;;10801:2;10793:11;;;10787:18;10821:14;;;10814:31;10877:41;10914:2;10906:11;;10877:41;:::i;:::-;10872:2;10865:5;10861:14;10854:65;10951:41;10988:2;10984;10980:11;10951:41;:::i;:::-;10946:2;10939:5;10935:14;10928:65;11026:42;11063:3;11059:2;11055:12;11026:42;:::i;:::-;11020:3;11009:15;;11002:67;11128:3;11120:12;;;11114:19;11149:15;;;11142:32;11207:43;11245:3;11237:12;;11207:43;:::i;:::-;11201:3;11194:5;11190:15;11183:68;11284:43;11322:3;11318:2;11314:12;11284:43;:::i;:::-;11278:3;11271:5;11267:15;11260:68;11361:40;11396:3;11392:2;11388:12;11361:40;:::i;:::-;11355:3;11348:5;11344:15;11337:65;11441:3;11437:2;11433:12;11427:19;-1:-1:-1;;;;;11461:8:42;11458:32;11455:52;;;11503:1;11500;11493:12;11455:52;11540:55;11587:7;11576:8;11572:2;11568:17;11540:55;:::i;:::-;11534:3;11523:15;;11516:80;-1:-1:-1;11527:5:42;10246:1380;-1:-1:-1;;;;10246:1380:42:o;12066:917::-;12168:6;12221:2;12209:9;12200:7;12196:23;12192:32;12189:52;;;12237:1;12234;12227:12;12189:52;12270:9;12264:16;-1:-1:-1;;;;;12295:6:42;12292:30;12289:50;;;12335:1;12332;12325:12;12289:50;12358:22;;12414:4;12396:16;;;12392:27;12389:47;;;12432:1;12429;12422:12;12389:47;12458:22;;:::i;:::-;12510:2;12504:9;12522:33;12547:7;12522:33;:::i;:::-;12564:22;;12632:2;12624:11;;;12618:18;12602:14;;;12595:42;12675:2;12667:11;;12661:18;12688:33;12661:18;12688:33;:::i;:::-;12748:2;12737:14;;12730:31;12800:2;12792:11;;12786:18;-1:-1:-1;;;;;12816:32:42;;12813:52;;;12861:1;12858;12851:12;12813:52;12897:55;12944:7;12933:8;12929:2;12925:17;12897:55;:::i;:::-;12892:2;12881:14;;12874:79;-1:-1:-1;12885:5:42;12066:917;-1:-1:-1;;;;12066:917:42:o;13376:245::-;13443:6;13496:2;13484:9;13475:7;13471:23;13467:32;13464:52;;;13512:1;13509;13502:12;13464:52;13544:9;13538:16;13563:28;13585:5;13563:28;:::i;13626:247::-;13685:6;13738:2;13726:9;13717:7;13713:23;13709:32;13706:52;;;13754:1;13751;13744:12;13706:52;13793:9;13780:23;13812:31;13837:5;13812:31;:::i;14254:266::-;14342:6;14337:3;14330:19;14394:6;14387:5;14380:4;14375:3;14371:14;14358:43;-1:-1:-1;14446:1:42;14421:16;;;14439:4;14417:27;;;14410:38;;;;14502:2;14481:15;;;-1:-1:-1;;14477:29:42;14468:39;;;14464:50;;14254:266::o;14525:1143::-;14720:2;14709:9;14702:21;14683:4;14758:6;14745:20;14774:31;14799:5;14774:31;:::i;:::-;14869:1;14865;14860:3;14856:11;14852:19;14845:5;14841:31;14836:2;14825:9;14821:18;14814:59;;14934:2;14926:6;14922:15;14909:29;14904:2;14893:9;14889:18;14882:57;14988:2;14980:6;14976:15;14963:29;15001:33;15026:7;15001:33;:::i;:::-;-1:-1:-1;;;;;15070:33:42;15065:2;15050:18;;;15043:61;;;;15152:15;;15139:29;15219:14;15215:27;;;-1:-1:-1;;15211:41:42;15187:66;;15177:94;;15267:1;15264;15257:12;15177:94;15295:31;;15407:2;15394:16;;;15349:21;-1:-1:-1;;;;;15422:30:42;;15419:50;;;15465:1;15462;15455:12;15419:50;15514:6;15498:14;15494:27;15485:7;15481:41;15478:61;;;15535:1;15532;15525:12;15478:61;15577:4;15570;15559:9;15555:20;15548:34;15599:63;15657:3;15646:9;15642:19;15634:6;15625:7;15599:63;:::i;:::-;15591:71;14525:1143;-1:-1:-1;;;;;14525:1143:42:o;15780:943::-;15977:2;15966:9;15959:21;16022:6;16016:13;16011:2;16000:9;15996:18;15989:41;15940:4;16077:2;16069:6;16065:15;16059:22;16119:4;16112;16101:9;16097:20;16090:34;16202:1;16198;16193:3;16189:11;16185:19;16170:12;16164:19;16160:45;16155:2;16144:9;16140:18;16133:73;-1:-1:-1;;;;;16271:2:42;16257:12;16253:21;16247:28;16243:53;16237:3;16226:9;16222:19;16215:82;16372:4;16358:12;16354:23;16348:30;16341:38;16334:46;16328:3;16317:9;16313:19;16306:75;16443:2;16429:12;16425:21;16419:28;16412:4;16401:9;16397:20;16390:58;16503:3;16489:12;16485:22;16479:29;16545:4;16539:3;16528:9;16524:19;16517:33;16573:54;16622:3;16611:9;16607:19;16591:14;16573:54;:::i;:::-;16559:68;;16688:3;16674:12;16670:22;16664:29;16658:3;16647:9;16643:19;16636:58;16711:6;16703:14;;;;15780:943;;;;:::o;16728:230::-;16798:6;16851:2;16839:9;16830:7;16826:23;16822:32;16819:52;;;16867:1;16864;16857:12;16819:52;-1:-1:-1;16912:16:42;;16728:230;-1:-1:-1;16728:230:42:o;16963:987::-;17392:3;17430:6;17424:13;17446:66;17505:6;17500:3;17493:4;17485:6;17481:17;17446:66;:::i;:::-;-1:-1:-1;;;17534:16:42;;;17559:18;;;17602:13;;17624:78;17602:13;17689:1;17678:13;;17671:4;17659:17;;17624:78;:::i;:::-;-1:-1:-1;;;17765:1:42;17721:20;;;;17757:10;;;17750:23;17798:13;;17820:75;17798:13;17882:1;17874:10;;17867:4;17855:17;;17820:75;:::i;:::-;17919:17;17911:33;;;;-1:-1:-1;;;;;16963:987:42:o;17955:127::-;18016:10;18011:3;18007:20;18004:1;17997:31;18047:4;18044:1;18037:15;18071:4;18068:1;18061:15;18087:327;18182:4;18240:11;18227:25;18334:3;18330:8;18319;18303:14;18299:29;18295:44;18275:18;18271:69;18261:97;;18354:1;18351;18344:12;18261:97;18375:33;;;;;18087:327;-1:-1:-1;;18087:327:42:o;18419:1462::-;18676:2;18665:9;18658:21;18721:6;18715:13;18710:2;18699:9;18695:18;18688:41;18784:4;18776:6;18772:17;18766:24;18760:3;18749:9;18745:19;18738:53;18639:4;18838;18830:6;18826:17;18820:24;18853:52;18900:3;18889:9;18885:19;18871:12;-1:-1:-1;;;;;15738:30:42;15726:43;;15673:102;18853:52;-1:-1:-1;18954:2:42;18942:15;;18936:22;-1:-1:-1;;;;;15738:30:42;;19016:3;19001:19;;15726:43;-1:-1:-1;19070:3:42;19058:16;;19052:23;-1:-1:-1;;;;;15738:30:42;;19133:3;19118:19;;15726:43;-1:-1:-1;19193:3:42;19181:16;;19175:23;19169:3;19154:19;;19147:52;19248:3;19236:16;;19230:23;-1:-1:-1;;;;;13054:31:42;;19312:3;19297:19;;13042:44;-1:-1:-1;19366:3:42;19354:16;;19348:23;-1:-1:-1;;;;;13054:31:42;;19430:6;19415:22;;13042:44;-1:-1:-1;19487:3:42;19475:16;;19469:23;315:13;;308:21;19548:3;19533:19;;296:34;19501:52;19602:3;19594:6;19590:16;19584:23;19644:6;19638:3;19627:9;19623:19;19616:35;19671:54;19720:3;19709:9;19705:19;19689:14;19671:54;:::i;:::-;19660:65;;19772:9;19767:3;19763:19;19756:4;19745:9;19741:20;19734:49;19800:30;19826:3;19818:6;19800:30;:::i;:::-;19792:38;;;19868:6;19861:4;19850:9;19846:20;19839:36;18419:1462;;;;;;:::o",
        "linkReferences": {},
        "immutableReferences": {
            "41446": [
                {
                    "start": 669,
                    "length": 32
                },
                {
                    "start": 1115,
                    "length": 32
                },
                {
                    "start": 2109,
                    "length": 32
                },
                {
                    "start": 2705,
                    "length": 32
                },
                {
                    "start": 3541,
                    "length": 32
                }
            ],
            "41551": [
                {
                    "start": 526,
                    "length": 32
                }
            ],
            "41554": [
                {
                    "start": 772,
                    "length": 32
                },
                {
                    "start": 937,
                    "length": 32
                },
                {
                    "start": 1213,
                    "length": 32
                },
                {
                    "start": 1731,
                    "length": 32
                },
                {
                    "start": 1878,
                    "length": 32
                },
                {
                    "start": 2207,
                    "length": 32
                },
                {
                    "start": 2647,
                    "length": 32
                }
            ],
            "424": [
                {
                    "start": 2944,
                    "length": 32
                }
            ],
            "426": [
                {
                    "start": 2985,
                    "length": 32
                }
            ],
            "428": [
                {
                    "start": 3026,
                    "length": 32
                }
            ],
            "562": [
                {
                    "start": 3982,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "ATTESTATION_SCHEMA()": "5bf2f20d",
        "DEMAND_ABI()": "fdc5b3f4",
        "IS_REVOCABLE()": "13da12b3",
        "SCHEMA_ABI()": "2083d47f",
        "_checkIdentical((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes)": "7a9f479e",
        "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
        "cancelStatement(bytes32)": "039b9bf6",
        "checkStatement((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes),bytes,bytes32)": "1272ff8b",
        "collectPayment(bytes32,bytes32)": "30088bc9",
        "eas()": "8150864d",
        "getDemandAbi()": "f0bebf03",
        "getSchemaAbi()": "344bd2d9",
        "isPayable()": "ce46e046",
        "makeStatement((address,uint256,address,bytes),uint64,bytes32)": "48f9fb46",
        "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
        "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
        "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
        "schemaRegistry()": "4441bbd9",
        "version()": "54fd4d50"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"},{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"_schemaRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFulfillment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPaymentAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ATTESTATION_SCHEMA\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEMAND_ABI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_REVOCABLE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SCHEMA_ABI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"statement\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"}],\"name\":\"_checkIdentical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"cancelStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"statement\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"checkStatement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_payment\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fulfillment\",\"type\":\"bytes32\"}],\"name\":\"collectPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eas\",\"outputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDemandAbi\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchemaAbi\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"arbiter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"demand\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC20PaymentStatement.StatementData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"}],\"name\":\"makeStatement\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaRegistry\",\"outputs\":[{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/statements/ERC20PaymentStatement.sol\":\"ERC20PaymentStatement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eas/=lib/eas-contracts/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1\",\"dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd\",\"dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]},\"lib/eas-contracts/contracts/resolver/SchemaResolver.sol\":{\"keccak256\":\"0x0c0533594956d3a7d861a68127825cbde3bc9a89979ece3aa99c3820f4c5a251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://487e5c67f3d347f6f99b0857155aebbb015f63666ab46c57dffc72a7c6f5c06f\",\"dweb:/ipfs/QmeTmXPtumpWVxGY2NXQG3Fma73vh3Bjb6diuUHK52mpPD\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/IArbiter.sol\":{\"keccak256\":\"0x514445ef64f135740d0cb0beeff835b874c612bdc44132af987101d1c3e969ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d9b1539c632c3282747c4e123c410ad8d544082e9c723429515247c7c88aa162\",\"dweb:/ipfs/QmceojxFNsJ2QUiMUyjxtUHr7DZWkztYdqweKQ1vbZAPEF\"]},\"src/IStatement.sol\":{\"keccak256\":\"0x3bacdc919fe58af2a032f453bde414c72d7347d703de87ac5c192b664ce40344\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8ca4ecb8e14c0cb2002ebafb0129360f4ecdf0b564b8656328006300301b77dd\",\"dweb:/ipfs/QmVZ3w96pwBwtHoaMQCZdQwFfitaxBj29A9DXfd8NoT7Wg\"]},\"src/statements/ERC20PaymentStatement.sol\":{\"keccak256\":\"0x0d3be265b9c3ea02bd7e045f4ce7ef7446b22fd60f1a0abdfd8ef8cdf8509322\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://42e7b60a1c5661e0194a7637c666fb5360d5d56fa391ab0399936930e251b432\",\"dweb:/ipfs/QmeyUrgjeh1seCkzJHVU8XoqwJM7wpAiED434U3sdexfXP\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.26+commit.8a97fa7a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract IEAS",
                            "name": "_eas",
                            "type": "address"
                        },
                        {
                            "internalType": "contract ISchemaRegistry",
                            "name": "_schemaRegistry",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AccessDenied"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DeadlineExpired"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidEAS"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidFulfillment"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidLength"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPayment"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPaymentAttestation"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPayable"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnauthorizedCall"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "ATTESTATION_SCHEMA",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DEMAND_ABI",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "IS_REVOCABLE",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "SCHEMA_ABI",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "statement",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "demand",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "_checkIdentical",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "attest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "uid",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "cancelStatement",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "statement",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "demand",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "checkStatement",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_payment",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_fulfillment",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "collectPayment",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "eas",
                    "outputs": [
                        {
                            "internalType": "contract IEAS",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getDemandAbi",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getSchemaAbi",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "isPayable",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct ERC20PaymentStatement.StatementData",
                            "name": "data",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "amount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "arbiter",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "demand",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint64",
                            "name": "expirationTime",
                            "type": "uint64"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "refUID",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "makeStatement",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiAttest",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation[]",
                            "name": "attestations",
                            "type": "tuple[]",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        },
                        {
                            "internalType": "uint256[]",
                            "name": "values",
                            "type": "uint256[]"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "multiRevoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct Attestation",
                            "name": "attestation",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "uid",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "schema",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "time",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "expirationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "uint64",
                                    "name": "revocationTime",
                                    "type": "uint64"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "refUID",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "address",
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "attester",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "revocable",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "data",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "revoke",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "schemaRegistry",
                    "outputs": [
                        {
                            "internalType": "contract ISchemaRegistry",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "receive"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The new attestation."
                        },
                        "returns": {
                            "_0": "Whether the attestation is valid."
                        }
                    },
                    "isPayable()": {
                        "returns": {
                            "_0": "Whether the resolver supports ETH transfers."
                        }
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The new attestations.",
                            "values": "Explicit ETH amounts which were sent with each attestation."
                        },
                        "returns": {
                            "_0": "Whether all the attestations are valid."
                        }
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "params": {
                            "attestations": "The existing attestations to be revoked.",
                            "values": "Explicit ETH amounts which were sent with each revocation."
                        },
                        "returns": {
                            "_0": "Whether the attestations can be revoked."
                        }
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "params": {
                            "attestation": "The existing attestation to be revoked."
                        },
                        "returns": {
                            "_0": "Whether the attestation can be revoked."
                        }
                    },
                    "version()": {
                        "returns": {
                            "_0": "Semver contract version as a string."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation and verifies whether it's valid."
                    },
                    "isPayable()": {
                        "notice": "Checks if the resolver can be sent ETH."
                    },
                    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes multiple attestations and verifies whether they are valid."
                    },
                    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
                        "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
                    },
                    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
                        "notice": "Processes an attestation revocation and verifies if it can be revoked."
                    },
                    "version()": {
                        "notice": "Returns the full semver contract version."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@eas/=lib/eas-contracts/contracts/",
                "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
                "eas-contracts/=lib/eas-contracts/contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/statements/ERC20PaymentStatement.sol": "ERC20PaymentStatement"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "lib/eas-contracts/contracts/Common.sol": {
                "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
                "urls": [
                    "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
                    "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/IEAS.sol": {
                "keccak256": "0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036",
                "urls": [
                    "bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1",
                    "dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
                "keccak256": "0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4",
                "urls": [
                    "bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517",
                    "dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/Semver.sol": {
                "keccak256": "0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8",
                "urls": [
                    "bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd",
                    "dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
                "keccak256": "0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395",
                "urls": [
                    "bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d",
                    "dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC"
                ],
                "license": "MIT"
            },
            "lib/eas-contracts/contracts/resolver/SchemaResolver.sol": {
                "keccak256": "0x0c0533594956d3a7d861a68127825cbde3bc9a89979ece3aa99c3820f4c5a251",
                "urls": [
                    "bzz-raw://487e5c67f3d347f6f99b0857155aebbb015f63666ab46c57dffc72a7c6f5c06f",
                    "dweb:/ipfs/QmeTmXPtumpWVxGY2NXQG3Fma73vh3Bjb6diuUHK52mpPD"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
                "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
                "urls": [
                    "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
                    "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
                "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
                "urls": [
                    "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
                    "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
                "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
                "urls": [
                    "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
                    "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
                ],
                "license": "MIT"
            },
            "src/IArbiter.sol": {
                "keccak256": "0x514445ef64f135740d0cb0beeff835b874c612bdc44132af987101d1c3e969ab",
                "urls": [
                    "bzz-raw://d9b1539c632c3282747c4e123c410ad8d544082e9c723429515247c7c88aa162",
                    "dweb:/ipfs/QmceojxFNsJ2QUiMUyjxtUHr7DZWkztYdqweKQ1vbZAPEF"
                ],
                "license": "UNLICENSED"
            },
            "src/IStatement.sol": {
                "keccak256": "0x3bacdc919fe58af2a032f453bde414c72d7347d703de87ac5c192b664ce40344",
                "urls": [
                    "bzz-raw://8ca4ecb8e14c0cb2002ebafb0129360f4ecdf0b564b8656328006300301b77dd",
                    "dweb:/ipfs/QmVZ3w96pwBwtHoaMQCZdQwFfitaxBj29A9DXfd8NoT7Wg"
                ],
                "license": "UNLICENSED"
            },
            "src/statements/ERC20PaymentStatement.sol": {
                "keccak256": "0x0d3be265b9c3ea02bd7e045f4ce7ef7446b22fd60f1a0abdfd8ef8cdf8509322",
                "urls": [
                    "bzz-raw://42e7b60a1c5661e0194a7637c666fb5360d5d56fa391ab0399936930e251b432",
                    "dweb:/ipfs/QmeyUrgjeh1seCkzJHVU8XoqwJM7wpAiED434U3sdexfXP"
                ],
                "license": "UNLICENSED"
            }
        },
        "version": 1
    },
    "id": 40
}
